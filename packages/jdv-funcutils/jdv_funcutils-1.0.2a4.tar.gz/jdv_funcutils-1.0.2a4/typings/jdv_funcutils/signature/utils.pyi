"""
This type stub file was generated by pyright.
"""

from inspect import Signature
from typing import Any, Callable, Dict, Hashable, List, Tuple, TypeVar, Union
from jdv_funcutils.imports import ParamSpec
from jdv_funcutils.signature.typedefs import SignatureLike

_K = TypeVar("_K", bound=Hashable)
_V = TypeVar("_V")
_T = TypeVar("_T")
_P = ParamSpec("_P")
_F = Callable[_P, _T]
def dict_rm_by_value(data: Dict[_K, _V], fn: Callable[[_V], bool]) -> Dict[_K, _V]:
    ...

def dict_remove_null(data: Dict[_K, _V]) -> Dict[_K, _V]:
    ...

def ignore_params(s: Signature, ignore: Union[str, Tuple[str, ...], List[str], None] = ...) -> Signature:
    ...

def get_signature(obj: SignatureLike, return_annotation: Any = ..., ignore: Union[str, Tuple[str, ...], List[str], None] = ...) -> Signature:
    ...

def signature_to_param_list(s: Signature): # -> list[Parameter]:
    ...

def signature_to_param_dict(s: Signature): # -> dict[str, Parameter]:
    ...

def copy_signature(obj: SignatureLike, return_annotation: Any = ..., ignore: Union[str, Tuple[str, ...], List[str], None] = ...) -> Callable[[Callable[_P, _T]], Callable[_P, _T]]:
    ...

