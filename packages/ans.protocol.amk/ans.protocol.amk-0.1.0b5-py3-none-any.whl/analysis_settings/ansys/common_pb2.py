# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: analysis_settings.ansys.common.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from common import quantity_pb2 as common_dot_quantity__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n$analysis_settings.ansys.common.proto\x12+ans.protocol.analysis_settings.ansys.common\x1a\x15\x63ommon.quantity.proto\"S\n\x1aGlobalReferenceTemperature\x12\x35\n\x05value\x18\x01 \x01(\x0b\x32&.ans.protocol.common.quantity.Quantity\":\n\x0eHarmonicMethod\"(\n\x04\x45num\x12\x16\n\x12MODE_SUPERPOSITION\x10\x00\x12\x08\n\x04\x46ULL\x10\x01\"[\n\x1bHarmonicVariationTechnology\"<\n\x04\x45num\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x01\x12\x07\n\x03YES\x10\x02\x12\x06\n\x02NO\x10\x03\"A\n\x13ModalFrequencyRange\"*\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\n\n\x06MANUAL\x10\x01\"L\n\x13HarmonicMSUPStorage\"5\n\x04\x45num\x12\x13\n\x0f\x41LL_FREQUENCIES\x10\x00\x12\x18\n\x14SELECTED_FREQUENCIES\x10\x01\"k\n\x14\x46requencySpacingType\"S\n\x04\x45num\x12\n\n\x06LINEAR\x10\x00\x12\x07\n\x03LOG\x10\x01\x12\x07\n\x03OB1\x10\x02\x12\x07\n\x03OB2\x10\x03\x12\x07\n\x03OB3\x10\x04\x12\x07\n\x03OB6\x10\x05\x12\x08\n\x04OB12\x10\x06\x12\x08\n\x04OB24\x10\x07\"@\n\rSpinSoftening\"/\n\x04\x45num\x12\x06\n\x02NO\x10\x00\x12\x07\n\x03YES\x10\x01\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x02\"\x92\x08\n\x10HarmonicSettings\x12\x19\n\x11\x63\x65ntral_frequency\x18\x01 \x01(\x01\x12!\n\x19minimum_forcing_frequency\x18\x02 \x01(\x01\x12!\n\x19maximum_forcing_frequency\x18\x03 \x01(\x01\x12\'\n\x1f\x66orcing_frequency_num_intervals\x18\x04 \x01(\r\x12/\n\'forcing_frequency_num_cluster_intervals\x18\x05 \x01(\r\x12!\n\x19\x63luster_forcing_frequency\x18\x06 \x01(\x08\x12\'\n\x1f\x66orcing_frequency_range_stepped\x18\x07 \x01(\x08\x12P\n\x06method\x18\x08 \x01(\x0e\x32@.ans.protocol.analysis_settings.ansys.common.HarmonicMethod.Enum\x12k\n\x14variation_technology\x18\t \x01(\x0e\x32M.ans.protocol.analysis_settings.ansys.common.HarmonicVariationTechnology.Enum\x12i\n\x1amodal_frequency_range_type\x18\n \x01(\x0e\x32\x45.ans.protocol.analysis_settings.ansys.common.ModalFrequencyRange.Enum\x12[\n\x0cmsup_storage\x18\x0b \x01(\x0e\x32\x45.ans.protocol.analysis_settings.ansys.common.HarmonicMSUPStorage.Enum\x12\x1f\n\x17minimum_modal_frequency\x18\x0c \x01(\x01\x12\x1f\n\x17maximum_modal_frequency\x18\r \x01(\x01\x12\x19\n\x11num_modes_to_find\x18\x0e \x01(\x05\x12\x66\n\x16\x66requency_spacing_type\x18\x0f \x01(\x0e\x32\x46.ans.protocol.analysis_settings.ansys.common.FrequencySpacingType.Enum\x12W\n\x0espin_softening\x18\x10 \x01(\x0e\x32?.ans.protocol.analysis_settings.ansys.common.SpinSoftening.Enum\x12,\n$include_user_forcing_frequency_steps\x18\x11 \x01(\x08\x12$\n\x1cuser_forcing_frequency_steps\x18\x12 \x03(\x01\"\xed\x01\n\rModalSettings\x12\x1f\n\x17number_of_modes_to_find\x18\x01 \x01(\x05\x12\x15\n\rmin_frequency\x18\x02 \x01(\x01\x12\x15\n\rmax_frequency\x18\x03 \x01(\x01\x12\x14\n\x0crange_search\x18\x04 \x01(\x08\x12W\n\x0espin_softening\x18\x05 \x01(\x0e\x32?.ans.protocol.analysis_settings.ansys.common.SpinSoftening.Enum\x12\x1e\n\x16has_follow_on_spectrum\x18\x06 \x01(\x08\"\x9b\x01\n\x14SubstructureSettings\x12\x1f\n\x17number_of_modes_to_find\x18\x01 \x01(\x05\x12\x15\n\rmin_frequency\x18\x02 \x01(\x01\x12\x15\n\rmax_frequency\x18\x03 \x01(\x01\x12\x14\n\x0crange_search\x18\x04 \x01(\x08\x12\x1e\n\x16number_of_load_vectors\x18\x05 \x01(\x05\"\xbf\x01\n\nSolverType\"\xb0\x01\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\n\n\x06\x44IRECT\x10\x01\x12\r\n\tITERATIVE\x10\x02\x12\n\n\x06UNSYMM\x10\x03\x12\x08\n\x04\x44\x41MP\x10\x04\x12\n\n\x06QRDAMP\x10\x05\x12\t\n\x05SNODE\x10\x06\x12\x0c\n\x08SUBSPACE\x10\x07\x12!\n\x1dSEQUENTIAL_CONVEX_PROGRAMMING\x10\x08\x12\x17\n\x13OPTIMALITY_CRITERIA\x10\t\"<\n\tModeReuse\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x07\n\x03YES\x10\x01\x12\x06\n\x02NO\x10\x02\"J\n\x17UseExistingModesymmFile\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x07\n\x03YES\x10\x01\x12\x06\n\x02NO\x10\x02\"i\n\x11NewtonRaphsonType\"T\n\x04\x45num\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x01\x12\x08\n\x04\x46ULL\x10\x02\x12\x0c\n\x08MODIFIED\x10\x03\x12\x0f\n\x0bUNSYMMETRIC\x10\x04\"A\n\x0eUseWeakSprings\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x06\n\x02ON\x10\x01\x12\x07\n\x03OFF\x10\x02\"R\n\x18WeakSpringsStiffnessType\"6\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\n\n\x06\x46\x41\x43TOR\x10\x01\x12\n\n\x06MANUAL\x10\x02\"\x9f\x02\n\x0bWeakSprings\x12Q\n\x07\x63ontrol\x18\x01 \x01(\x0e\x32@.ans.protocol.analysis_settings.ansys.common.UseWeakSprings.Enum\x12\x62\n\x0estiffness_type\x18\x02 \x01(\x0e\x32J.ans.protocol.analysis_settings.ansys.common.WeakSpringsStiffnessType.Enum\x12\x18\n\x10stiffness_factor\x18\x03 \x01(\x01\x12?\n\x0fstiffness_value\x18\x04 \x01(\x0b\x32&.ans.protocol.common.quantity.Quantity\"V\n\rPivotChecking\"E\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x0e\n\nON_WARNING\x10\x01\x12\x0c\n\x08ON_ERROR\x10\x02\x12\x07\n\x03OFF\x10\x03\"S\n\x10StoreModalResult\"?\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x06\n\x02NO\x10\x01\x12\x17\n\x13\x46OR_FUTURE_SPECTRUM\x10\x02\"u\n\x10\x45xpandResultFrom\"a\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x15\n\x11HARMONIC_SOLUTION\x10\x01\x12\x12\n\x0eMODAL_SOLUTION\x10\x02\x12\x16\n\x12TRANSIENT_SOLUTION\x10\x03\"U\n\"CalculateParticipationFactorResult\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x07\n\x03YES\x10\x01\x12\x06\n\x02NO\x10\x02\"E\n\x12\x43ombineResultFiles\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x07\n\x03YES\x10\x01\x12\x06\n\x02NO\x10\x02\"O\n\x14\x43\x61\x63heResultsInMemory\"7\n\x04\x45num\x12\t\n\x05NEVER\x10\x00\x12\x12\n\x0e\x41\x46TER_SOLUTION\x10\x01\x12\x10\n\x0c\x41S_REQUESTED\x10\x02\"t\n\x1aProgramControlledExpansion\"V\n\x04\x45num\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x12\n\x0eMODAL_SOLUTION\x10\x01\x12\x15\n\x11HARMONIC_SOLUTION\x10\x02\x12\x16\n\x12TRANSIENT_SOLUTION\x10\x03\"=\n\x0eNodalForceType\"+\n\x04\x45num\x12\x06\n\x02NO\x10\x00\x12\x07\n\x03YES\x10\x01\x12\x12\n\x0e\x43ONSTRAIN_NODE\x10\x02\"Z\n\x1aResultTimePointOptionsType\"<\n\x04\x45num\x12\x07\n\x03\x41LL\x10\x00\x12\x08\n\x04LAST\x10\x01\x12\x12\n\x0e\x45QUALLY_SPACED\x10\x02\x12\r\n\tSPECIFIED\x10\x03\"\x84\x01\n\x17ResultTimePointsOptions\x12Z\n\x04type\x18\x01 \x01(\x0e\x32L.ans.protocol.analysis_settings.ansys.common.ResultTimePointOptionsType.Enum\x12\r\n\x05value\x18\x02 \x01(\r\"\x1b\n\nMaxResults\x12\r\n\x05value\x18\x01 \x01(\r\"\x8f\x05\n\x0eOutputSettings\x12g\n\x19result_time_point_options\x18\x01 \x01(\x0b\x32\x44.ans.protocol.analysis_settings.ansys.common.ResultTimePointsOptions\x12^\n\x12store_modal_result\x18\x02 \x01(\x0e\x32\x42.ans.protocol.analysis_settings.ansys.common.StoreModalResult.Enum\x12^\n\x12\x65xpand_result_from\x18\x03 \x01(\x0e\x32\x42.ans.protocol.analysis_settings.ansys.common.ExpandResultFrom.Enum\x12r\n\x1cprogram_controlled_expansion\x18\x04 \x01(\x0e\x32L.ans.protocol.analysis_settings.ansys.common.ProgramControlledExpansion.Enum\x12Z\n\x10nodal_force_type\x18\x05 \x01(\x0e\x32@.ans.protocol.analysis_settings.ansys.common.NodalForceType.Enum\x12\x83\x01\n%calculate_participation_factor_result\x18\x06 \x01(\x0e\x32T.ans.protocol.analysis_settings.ansys.common.CalculateParticipationFactorResult.Enum\"\xdb\x01\n\x0cPostSettings\x12g\n\x17\x63\x61\x63he_results_in_memory\x18\x01 \x01(\x0e\x32\x46.ans.protocol.analysis_settings.ansys.common.CacheResultsInMemory.Enum\x12\x62\n\x14\x63ombine_result_files\x18\x02 \x01(\x0e\x32\x44.ans.protocol.analysis_settings.ansys.common.CombineResultFiles.Enum\"\xd7\x04\n\x10\x46utureIntentType\"\xc2\x04\n\x04\x45num\x12\r\n\tSAVE_NONE\x10\x00\x12\x16\n\x12SAVE_FILES_FOR_PSD\x10\x01\x12\x1b\n\x17SAVE_FILES_FOR_HARMONIC\x10\x02\x12\x1c\n\x18SAVE_FILES_FOR_TRANSIENT\x10\x03\x12$\n SAVE_FILES_FOR_PRESTRESSED_MODAL\x10\x04\x12\x1a\n\x16SAVE_FILES_FOR_RESTART\x10\x05\x12\x15\n\x11SAVE_FILES_FOR_RS\x10\x06\x12%\n!SAVE_FILES_FOR_MODE_SUPERPOSITION\x10\x07\x12\x31\n-SAVE_FILES_FOR_PRESTRESSED_MODE_SUPERPOSITION\x10\x08\x12,\n(SAVE_FILES_FOR_PRESTRESSED_FULL_HARMONIC\x10\t\x12 \n\x1cSAVE_FILES_FOR_RBD_TRANSIENT\x10\n\x12\x1b\n\x17SAVE_FILES_FOR_TOPO_OPT\x10\x0b\x12)\n%SAVE_FILES_FOR_PRESTRESS_AND_TOPO_OPT\x10\x0c\x12$\n SAVE_FILES_FOR_MSUP_AND_TOPO_OPT\x10\r\x12.\n*SAVE_FILES_FOR_PRESTRESS_MSUP_ANS_TOPO_OPT\x10\x0e\x12\x37\n3SAVE_FILES_FOR_PRESTRESS_FULL_HARMONIC_AND_TOPO_OPT\x10\x0f\";\n\x12SolverUnitsControl\"%\n\x04\x45num\x12\x11\n\rACTIVE_SYSTEM\x10\x00\x12\n\n\x06MANUAL\x10\x01\"\xcb\x02\n\x0c\x46ileControls\x12\x62\n\x14solver_units_control\x18\x01 \x01(\x0e\x32\x44.ans.protocol.analysis_settings.ansys.common.SolverUnitsControl.Enum\x12\x14\n\x0csolver_units\x18\x02 \x01(\x05\x12\x1d\n\x15selected_solver_units\x18\x03 \x01(\x05\x12Y\n\rfuture_intent\x18\x04 \x01(\x0e\x32\x42.ans.protocol.analysis_settings.ansys.common.FutureIntentType.Enum\x12\x15\n\rsave_ansys_db\x18\x05 \x01(\x08\x12\x1b\n\x13\x64\x65lete_unused_files\x18\x06 \x01(\x08\x12\x13\n\x0bresult_file\x18\x07 \x01(\t\"\xba\x01\n\x0e\x43yclicSettings\x12\x12\n\nactivation\x18\x01 \x01(\x05\x12\x16\n\x0emin_harm_index\x18\x02 \x01(\x05\x12\x16\n\x0emax_harm_index\x18\x03 \x01(\x05\x12\x17\n\x0fstep_harm_index\x18\x04 \x01(\x05\x12\x17\n\x0fharm_index_type\x18\x05 \x01(\x05\x12\x16\n\x0evt_accelerator\x18\x06 \x01(\x05\x12\x1a\n\x12\x63yc_sectors_number\x18\x07 \x01(\x05\"A\n\x13\x43onstantDampingType\"*\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\n\n\x06MANUAL\x10\x01\"D\n\x14TransientDampingType\",\n\x04\x45num\x12\n\n\x06\x44IRECT\x10\x00\x12\x18\n\x14\x44\x41MPING_VS_FREQUENCY\x10\x01\"D\n\x0f\x42\x65taVSFrequency\x12\x11\n\tfrequency\x18\x01 \x01(\x01\x12\x0f\n\x07measure\x18\x02 \x01(\x01\x12\r\n\x05value\x18\x03 \x01(\x01\"\x86\x01\n\x0f\x43onstantDamping\x12\x64\n\x15\x63onstant_damping_type\x18\x01 \x01(\x0e\x32\x45.ans.protocol.analysis_settings.ansys.common.ConstantDampingType.Enum\x12\r\n\x05value\x18\x02 \x01(\x01\"\x93\x01\n\x0b\x42\x65taDamping\x12\x16\n\x0c\x64irect_value\x18\x01 \x01(\x01H\x00\x12Y\n\x11\x62\x65ta_vs_frequency\x18\x02 \x01(\x0b\x32<.ans.protocol.analysis_settings.ansys.common.BetaVSFrequencyH\x00\x42\x11\n\x0f\x42\x65taDampingType\"\x1d\n\x0c\x41lphaDamping\x12\r\n\x05value\x18\x01 \x01(\x01\"\x89\x01\n\x10NumericalDamping\x12\x66\n\x16transient_damping_type\x18\x01 \x01(\x0e\x32\x46.ans.protocol.analysis_settings.ansys.common.TransientDampingType.Enum\x12\r\n\x05value\x18\x02 \x01(\x01\"-\n\x1cStructuralDampingCoefficient\x12\r\n\x05value\x18\x01 \x01(\x01\"\x91\x02\n\x15RotordynamicsSettings\x12\x17\n\x0f\x63oriolis_effect\x18\x01 \x01(\x08\x12\"\n\x1areference_frame_stationary\x18\x02 \x01(\x08\x12\x1f\n\x17rotating_damping_effect\x18\x03 \x01(\x08\x12\x18\n\x10\x63\x61mpbell_diagram\x18\x04 \x01(\x08\x12\x0f\n\x07sorting\x18\x05 \x01(\x08\x12\x1e\n\x16modal_number_of_points\x18\x06 \x01(\x05\x12O\n\nmode_reuse\x18\x07 \x01(\x0e\x32;.ans.protocol.analysis_settings.ansys.common.ModeReuse.Enum\"C\n\x10\x41utoTimeStepping\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x06\n\x02ON\x10\x01\x12\x07\n\x03OFF\x10\x02\"\xb9\x03\n\x0cTimeStepping\x12^\n\x12\x61uto_time_stepping\x18\x01 \x01(\x0e\x32\x42.ans.protocol.analysis_settings.ansys.common.AutoTimeStepping.Enum\x12V\n\x08substeps\x18\x03 \x01(\x0b\x32\x42.ans.protocol.analysis_settings.ansys.common.TimeStepping.SubstepsH\x00\x12P\n\x05times\x18\x04 \x01(\x0b\x32?.ans.protocol.analysis_settings.ansys.common.TimeStepping.TimesH\x00\x12\x12\n\ncarry_over\x18\x05 \x01(\x08\x1a=\n\x08Substeps\x12\x0f\n\x07initial\x18\x01 \x01(\r\x12\x0f\n\x07maximum\x18\x02 \x01(\r\x12\x0f\n\x07minimum\x18\x03 \x01(\r\x1a:\n\x05Times\x12\x0f\n\x07initial\x18\x01 \x01(\x01\x12\x0f\n\x07maximum\x18\x02 \x01(\x01\x12\x0f\n\x07minimum\x18\x03 \x01(\x01\x42\x10\n\x0eStepDefinition\"=\n\nLineSearch\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x06\n\x02ON\x10\x01\x12\x07\n\x03OFF\x10\x02\"Q\n\x1e\x43onvergenceToleranceActivation\"/\n\x04\x45num\x12\x16\n\x12PROGRAM_CONTROLLED\x10\x00\x12\x06\n\x02ON\x10\x01\x12\x07\n\x03OFF\x10\x02\"E\n\x18\x43onvergenceToleranceNorm\")\n\x04\x45num\x12\x11\n\rINFINITE_NORM\x10\x00\x12\x06\n\x02L1\x10\x01\x12\x06\n\x02L2\x10\x02\"J\n\x1a\x43onvergenceToleranceSource\",\n\x04\x45num\x12\x14\n\x10\x41NSYS_CALCULATED\x10\x00\x12\x0e\n\nUSER_INPUT\x10\x01\"\xf1\x02\n\x14\x43onvergenceTolerance\x12\x64\n\nactivation\x18\x01 \x01(\x0e\x32P.ans.protocol.analysis_settings.ansys.common.ConvergenceToleranceActivation.Enum\x12\r\n\x05value\x18\x02 \x01(\x01\x12\x11\n\ttolerance\x18\x03 \x01(\x01\x12X\n\x04norm\x18\x04 \x01(\x0e\x32J.ans.protocol.analysis_settings.ansys.common.ConvergenceToleranceNorm.Enum\x12\x19\n\x11minimum_reference\x18\x05 \x01(\x01\x12\\\n\x06source\x18\x06 \x01(\x0e\x32L.ans.protocol.analysis_settings.ansys.common.ConvergenceToleranceSource.Enum\">\n\x0cStepSettings\x12\x1c\n\x14load_case_identifier\x18\x01 \x01(\t\x12\x10\n\x08\x65nd_time\x18\x02 \x01(\x01\"e\n\x0e\x46ractureOutput\"S\n\x04\x45num\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04SIFS\x10\x01\x12\x08\n\x04JINT\x10\x02\x12\x08\n\x04VCCT\x10\x03\x12\x0b\n\x07TSTRESS\x10\x04\x12\x08\n\x04MFOR\x10\x05\x12\t\n\x05\x43STAR\x10\x06\"@\n\nCrackShape\"2\n\x04\x45num\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0e\n\nELLIPTICAL\x10\x01\x12\r\n\tARBITRARY\x10\x02\"x\n\x0b\x43rackOutput\x12\x19\n\x11\x63rack_solution_id\x18\x01 \x01(\r\x12N\n\x04type\x18\x02 \x01(\x0e\x32@.ans.protocol.analysis_settings.ansys.common.FractureOutput.Enum\"O\n\x1b\x43rackFrontExtensionNodeInfo\x12\x0f\n\x07node_id\x18\x01 \x01(\r\x12\t\n\x01x\x18\x02 \x01(\x01\x12\t\n\x01y\x18\x03 \x01(\x01\x12\t\n\x01z\x18\x04 \x01(\x01\"\xa2\x03\n\rCrackSettings\x12\"\n\x1a\x63rack_coordinate_system_id\x18\x01 \x01(\r\x12&\n\x1e\x63rack_front_named_selection_id\x18\x02 \x01(\r\x12\x14\n\x0cnum_contours\x18\x03 \x01(\r\x12O\n\rcrack_outputs\x18\x04 \x03(\x0b\x32\x38.ans.protocol.analysis_settings.ansys.common.CrackOutput\x12\x0c\n\x04name\x18\x05 \x01(\t\x12K\n\x05shape\x18\x06 \x01(\x0e\x32<.ans.protocol.analysis_settings.ansys.common.CrackShape.Enum\x12q\n\x1f\x63rack_front_extension_node_info\x18\x07 \x03(\x0b\x32H.ans.protocol.analysis_settings.ansys.common.CrackFrontExtensionNodeInfo\x12\x10\n\x08symmetry\x18\x08 \x01(\x08\"\x98\x03\n\x10\x46ractureSettings\x12\x11\n\tcrack_ids\x18\x01 \x03(\r\x12h\n\x0e\x63rack_settings\x18\x02 \x03(\x0b\x32P.ans.protocol.analysis_settings.ansys.common.FractureSettings.CrackSettingsEntry\x12 \n\x18\x63\x61lculate_material_force\x18\x03 \x01(\x08\x12\x1a\n\x12\x63\x61lculate_t_stress\x18\x04 \x01(\x08\x12\x16\n\x0e\x63\x61lculate_sifs\x18\x05 \x01(\x08\x12\x1c\n\x14\x63\x61lculate_j_integral\x18\x06 \x01(\x08\x12!\n\x19\x63\x61lculate_c_star_integral\x18\x07 \x01(\x08\x1ap\n\x12\x43rackSettingsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12I\n\x05value\x18\x02 \x01(\x0b\x32:.ans.protocol.analysis_settings.ansys.common.CrackSettings:\x02\x38\x01\x42/H\x03\xaa\x02*Ans.Protocol.AnalysisSettings.ANSYS.Commonb\x06proto3')



_GLOBALREFERENCETEMPERATURE = DESCRIPTOR.message_types_by_name['GlobalReferenceTemperature']
_HARMONICMETHOD = DESCRIPTOR.message_types_by_name['HarmonicMethod']
_HARMONICVARIATIONTECHNOLOGY = DESCRIPTOR.message_types_by_name['HarmonicVariationTechnology']
_MODALFREQUENCYRANGE = DESCRIPTOR.message_types_by_name['ModalFrequencyRange']
_HARMONICMSUPSTORAGE = DESCRIPTOR.message_types_by_name['HarmonicMSUPStorage']
_FREQUENCYSPACINGTYPE = DESCRIPTOR.message_types_by_name['FrequencySpacingType']
_SPINSOFTENING = DESCRIPTOR.message_types_by_name['SpinSoftening']
_HARMONICSETTINGS = DESCRIPTOR.message_types_by_name['HarmonicSettings']
_MODALSETTINGS = DESCRIPTOR.message_types_by_name['ModalSettings']
_SUBSTRUCTURESETTINGS = DESCRIPTOR.message_types_by_name['SubstructureSettings']
_SOLVERTYPE = DESCRIPTOR.message_types_by_name['SolverType']
_MODEREUSE = DESCRIPTOR.message_types_by_name['ModeReuse']
_USEEXISTINGMODESYMMFILE = DESCRIPTOR.message_types_by_name['UseExistingModesymmFile']
_NEWTONRAPHSONTYPE = DESCRIPTOR.message_types_by_name['NewtonRaphsonType']
_USEWEAKSPRINGS = DESCRIPTOR.message_types_by_name['UseWeakSprings']
_WEAKSPRINGSSTIFFNESSTYPE = DESCRIPTOR.message_types_by_name['WeakSpringsStiffnessType']
_WEAKSPRINGS = DESCRIPTOR.message_types_by_name['WeakSprings']
_PIVOTCHECKING = DESCRIPTOR.message_types_by_name['PivotChecking']
_STOREMODALRESULT = DESCRIPTOR.message_types_by_name['StoreModalResult']
_EXPANDRESULTFROM = DESCRIPTOR.message_types_by_name['ExpandResultFrom']
_CALCULATEPARTICIPATIONFACTORRESULT = DESCRIPTOR.message_types_by_name['CalculateParticipationFactorResult']
_COMBINERESULTFILES = DESCRIPTOR.message_types_by_name['CombineResultFiles']
_CACHERESULTSINMEMORY = DESCRIPTOR.message_types_by_name['CacheResultsInMemory']
_PROGRAMCONTROLLEDEXPANSION = DESCRIPTOR.message_types_by_name['ProgramControlledExpansion']
_NODALFORCETYPE = DESCRIPTOR.message_types_by_name['NodalForceType']
_RESULTTIMEPOINTOPTIONSTYPE = DESCRIPTOR.message_types_by_name['ResultTimePointOptionsType']
_RESULTTIMEPOINTSOPTIONS = DESCRIPTOR.message_types_by_name['ResultTimePointsOptions']
_MAXRESULTS = DESCRIPTOR.message_types_by_name['MaxResults']
_OUTPUTSETTINGS = DESCRIPTOR.message_types_by_name['OutputSettings']
_POSTSETTINGS = DESCRIPTOR.message_types_by_name['PostSettings']
_FUTUREINTENTTYPE = DESCRIPTOR.message_types_by_name['FutureIntentType']
_SOLVERUNITSCONTROL = DESCRIPTOR.message_types_by_name['SolverUnitsControl']
_FILECONTROLS = DESCRIPTOR.message_types_by_name['FileControls']
_CYCLICSETTINGS = DESCRIPTOR.message_types_by_name['CyclicSettings']
_CONSTANTDAMPINGTYPE = DESCRIPTOR.message_types_by_name['ConstantDampingType']
_TRANSIENTDAMPINGTYPE = DESCRIPTOR.message_types_by_name['TransientDampingType']
_BETAVSFREQUENCY = DESCRIPTOR.message_types_by_name['BetaVSFrequency']
_CONSTANTDAMPING = DESCRIPTOR.message_types_by_name['ConstantDamping']
_BETADAMPING = DESCRIPTOR.message_types_by_name['BetaDamping']
_ALPHADAMPING = DESCRIPTOR.message_types_by_name['AlphaDamping']
_NUMERICALDAMPING = DESCRIPTOR.message_types_by_name['NumericalDamping']
_STRUCTURALDAMPINGCOEFFICIENT = DESCRIPTOR.message_types_by_name['StructuralDampingCoefficient']
_ROTORDYNAMICSSETTINGS = DESCRIPTOR.message_types_by_name['RotordynamicsSettings']
_AUTOTIMESTEPPING = DESCRIPTOR.message_types_by_name['AutoTimeStepping']
_TIMESTEPPING = DESCRIPTOR.message_types_by_name['TimeStepping']
_TIMESTEPPING_SUBSTEPS = _TIMESTEPPING.nested_types_by_name['Substeps']
_TIMESTEPPING_TIMES = _TIMESTEPPING.nested_types_by_name['Times']
_LINESEARCH = DESCRIPTOR.message_types_by_name['LineSearch']
_CONVERGENCETOLERANCEACTIVATION = DESCRIPTOR.message_types_by_name['ConvergenceToleranceActivation']
_CONVERGENCETOLERANCENORM = DESCRIPTOR.message_types_by_name['ConvergenceToleranceNorm']
_CONVERGENCETOLERANCESOURCE = DESCRIPTOR.message_types_by_name['ConvergenceToleranceSource']
_CONVERGENCETOLERANCE = DESCRIPTOR.message_types_by_name['ConvergenceTolerance']
_STEPSETTINGS = DESCRIPTOR.message_types_by_name['StepSettings']
_FRACTUREOUTPUT = DESCRIPTOR.message_types_by_name['FractureOutput']
_CRACKSHAPE = DESCRIPTOR.message_types_by_name['CrackShape']
_CRACKOUTPUT = DESCRIPTOR.message_types_by_name['CrackOutput']
_CRACKFRONTEXTENSIONNODEINFO = DESCRIPTOR.message_types_by_name['CrackFrontExtensionNodeInfo']
_CRACKSETTINGS = DESCRIPTOR.message_types_by_name['CrackSettings']
_FRACTURESETTINGS = DESCRIPTOR.message_types_by_name['FractureSettings']
_FRACTURESETTINGS_CRACKSETTINGSENTRY = _FRACTURESETTINGS.nested_types_by_name['CrackSettingsEntry']
_HARMONICMETHOD_ENUM = _HARMONICMETHOD.enum_types_by_name['Enum']
_HARMONICVARIATIONTECHNOLOGY_ENUM = _HARMONICVARIATIONTECHNOLOGY.enum_types_by_name['Enum']
_MODALFREQUENCYRANGE_ENUM = _MODALFREQUENCYRANGE.enum_types_by_name['Enum']
_HARMONICMSUPSTORAGE_ENUM = _HARMONICMSUPSTORAGE.enum_types_by_name['Enum']
_FREQUENCYSPACINGTYPE_ENUM = _FREQUENCYSPACINGTYPE.enum_types_by_name['Enum']
_SPINSOFTENING_ENUM = _SPINSOFTENING.enum_types_by_name['Enum']
_SOLVERTYPE_ENUM = _SOLVERTYPE.enum_types_by_name['Enum']
_MODEREUSE_ENUM = _MODEREUSE.enum_types_by_name['Enum']
_USEEXISTINGMODESYMMFILE_ENUM = _USEEXISTINGMODESYMMFILE.enum_types_by_name['Enum']
_NEWTONRAPHSONTYPE_ENUM = _NEWTONRAPHSONTYPE.enum_types_by_name['Enum']
_USEWEAKSPRINGS_ENUM = _USEWEAKSPRINGS.enum_types_by_name['Enum']
_WEAKSPRINGSSTIFFNESSTYPE_ENUM = _WEAKSPRINGSSTIFFNESSTYPE.enum_types_by_name['Enum']
_PIVOTCHECKING_ENUM = _PIVOTCHECKING.enum_types_by_name['Enum']
_STOREMODALRESULT_ENUM = _STOREMODALRESULT.enum_types_by_name['Enum']
_EXPANDRESULTFROM_ENUM = _EXPANDRESULTFROM.enum_types_by_name['Enum']
_CALCULATEPARTICIPATIONFACTORRESULT_ENUM = _CALCULATEPARTICIPATIONFACTORRESULT.enum_types_by_name['Enum']
_COMBINERESULTFILES_ENUM = _COMBINERESULTFILES.enum_types_by_name['Enum']
_CACHERESULTSINMEMORY_ENUM = _CACHERESULTSINMEMORY.enum_types_by_name['Enum']
_PROGRAMCONTROLLEDEXPANSION_ENUM = _PROGRAMCONTROLLEDEXPANSION.enum_types_by_name['Enum']
_NODALFORCETYPE_ENUM = _NODALFORCETYPE.enum_types_by_name['Enum']
_RESULTTIMEPOINTOPTIONSTYPE_ENUM = _RESULTTIMEPOINTOPTIONSTYPE.enum_types_by_name['Enum']
_FUTUREINTENTTYPE_ENUM = _FUTUREINTENTTYPE.enum_types_by_name['Enum']
_SOLVERUNITSCONTROL_ENUM = _SOLVERUNITSCONTROL.enum_types_by_name['Enum']
_CONSTANTDAMPINGTYPE_ENUM = _CONSTANTDAMPINGTYPE.enum_types_by_name['Enum']
_TRANSIENTDAMPINGTYPE_ENUM = _TRANSIENTDAMPINGTYPE.enum_types_by_name['Enum']
_AUTOTIMESTEPPING_ENUM = _AUTOTIMESTEPPING.enum_types_by_name['Enum']
_LINESEARCH_ENUM = _LINESEARCH.enum_types_by_name['Enum']
_CONVERGENCETOLERANCEACTIVATION_ENUM = _CONVERGENCETOLERANCEACTIVATION.enum_types_by_name['Enum']
_CONVERGENCETOLERANCENORM_ENUM = _CONVERGENCETOLERANCENORM.enum_types_by_name['Enum']
_CONVERGENCETOLERANCESOURCE_ENUM = _CONVERGENCETOLERANCESOURCE.enum_types_by_name['Enum']
_FRACTUREOUTPUT_ENUM = _FRACTUREOUTPUT.enum_types_by_name['Enum']
_CRACKSHAPE_ENUM = _CRACKSHAPE.enum_types_by_name['Enum']
GlobalReferenceTemperature = _reflection.GeneratedProtocolMessageType('GlobalReferenceTemperature', (_message.Message,), {
  'DESCRIPTOR' : _GLOBALREFERENCETEMPERATURE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.GlobalReferenceTemperature)
  })
_sym_db.RegisterMessage(GlobalReferenceTemperature)

HarmonicMethod = _reflection.GeneratedProtocolMessageType('HarmonicMethod', (_message.Message,), {
  'DESCRIPTOR' : _HARMONICMETHOD,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.HarmonicMethod)
  })
_sym_db.RegisterMessage(HarmonicMethod)

HarmonicVariationTechnology = _reflection.GeneratedProtocolMessageType('HarmonicVariationTechnology', (_message.Message,), {
  'DESCRIPTOR' : _HARMONICVARIATIONTECHNOLOGY,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.HarmonicVariationTechnology)
  })
_sym_db.RegisterMessage(HarmonicVariationTechnology)

ModalFrequencyRange = _reflection.GeneratedProtocolMessageType('ModalFrequencyRange', (_message.Message,), {
  'DESCRIPTOR' : _MODALFREQUENCYRANGE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ModalFrequencyRange)
  })
_sym_db.RegisterMessage(ModalFrequencyRange)

HarmonicMSUPStorage = _reflection.GeneratedProtocolMessageType('HarmonicMSUPStorage', (_message.Message,), {
  'DESCRIPTOR' : _HARMONICMSUPSTORAGE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.HarmonicMSUPStorage)
  })
_sym_db.RegisterMessage(HarmonicMSUPStorage)

FrequencySpacingType = _reflection.GeneratedProtocolMessageType('FrequencySpacingType', (_message.Message,), {
  'DESCRIPTOR' : _FREQUENCYSPACINGTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.FrequencySpacingType)
  })
_sym_db.RegisterMessage(FrequencySpacingType)

SpinSoftening = _reflection.GeneratedProtocolMessageType('SpinSoftening', (_message.Message,), {
  'DESCRIPTOR' : _SPINSOFTENING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.SpinSoftening)
  })
_sym_db.RegisterMessage(SpinSoftening)

HarmonicSettings = _reflection.GeneratedProtocolMessageType('HarmonicSettings', (_message.Message,), {
  'DESCRIPTOR' : _HARMONICSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.HarmonicSettings)
  })
_sym_db.RegisterMessage(HarmonicSettings)

ModalSettings = _reflection.GeneratedProtocolMessageType('ModalSettings', (_message.Message,), {
  'DESCRIPTOR' : _MODALSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ModalSettings)
  })
_sym_db.RegisterMessage(ModalSettings)

SubstructureSettings = _reflection.GeneratedProtocolMessageType('SubstructureSettings', (_message.Message,), {
  'DESCRIPTOR' : _SUBSTRUCTURESETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.SubstructureSettings)
  })
_sym_db.RegisterMessage(SubstructureSettings)

SolverType = _reflection.GeneratedProtocolMessageType('SolverType', (_message.Message,), {
  'DESCRIPTOR' : _SOLVERTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.SolverType)
  })
_sym_db.RegisterMessage(SolverType)

ModeReuse = _reflection.GeneratedProtocolMessageType('ModeReuse', (_message.Message,), {
  'DESCRIPTOR' : _MODEREUSE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ModeReuse)
  })
_sym_db.RegisterMessage(ModeReuse)

UseExistingModesymmFile = _reflection.GeneratedProtocolMessageType('UseExistingModesymmFile', (_message.Message,), {
  'DESCRIPTOR' : _USEEXISTINGMODESYMMFILE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.UseExistingModesymmFile)
  })
_sym_db.RegisterMessage(UseExistingModesymmFile)

NewtonRaphsonType = _reflection.GeneratedProtocolMessageType('NewtonRaphsonType', (_message.Message,), {
  'DESCRIPTOR' : _NEWTONRAPHSONTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.NewtonRaphsonType)
  })
_sym_db.RegisterMessage(NewtonRaphsonType)

UseWeakSprings = _reflection.GeneratedProtocolMessageType('UseWeakSprings', (_message.Message,), {
  'DESCRIPTOR' : _USEWEAKSPRINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.UseWeakSprings)
  })
_sym_db.RegisterMessage(UseWeakSprings)

WeakSpringsStiffnessType = _reflection.GeneratedProtocolMessageType('WeakSpringsStiffnessType', (_message.Message,), {
  'DESCRIPTOR' : _WEAKSPRINGSSTIFFNESSTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.WeakSpringsStiffnessType)
  })
_sym_db.RegisterMessage(WeakSpringsStiffnessType)

WeakSprings = _reflection.GeneratedProtocolMessageType('WeakSprings', (_message.Message,), {
  'DESCRIPTOR' : _WEAKSPRINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.WeakSprings)
  })
_sym_db.RegisterMessage(WeakSprings)

PivotChecking = _reflection.GeneratedProtocolMessageType('PivotChecking', (_message.Message,), {
  'DESCRIPTOR' : _PIVOTCHECKING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.PivotChecking)
  })
_sym_db.RegisterMessage(PivotChecking)

StoreModalResult = _reflection.GeneratedProtocolMessageType('StoreModalResult', (_message.Message,), {
  'DESCRIPTOR' : _STOREMODALRESULT,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.StoreModalResult)
  })
_sym_db.RegisterMessage(StoreModalResult)

ExpandResultFrom = _reflection.GeneratedProtocolMessageType('ExpandResultFrom', (_message.Message,), {
  'DESCRIPTOR' : _EXPANDRESULTFROM,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ExpandResultFrom)
  })
_sym_db.RegisterMessage(ExpandResultFrom)

CalculateParticipationFactorResult = _reflection.GeneratedProtocolMessageType('CalculateParticipationFactorResult', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATEPARTICIPATIONFACTORRESULT,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CalculateParticipationFactorResult)
  })
_sym_db.RegisterMessage(CalculateParticipationFactorResult)

CombineResultFiles = _reflection.GeneratedProtocolMessageType('CombineResultFiles', (_message.Message,), {
  'DESCRIPTOR' : _COMBINERESULTFILES,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CombineResultFiles)
  })
_sym_db.RegisterMessage(CombineResultFiles)

CacheResultsInMemory = _reflection.GeneratedProtocolMessageType('CacheResultsInMemory', (_message.Message,), {
  'DESCRIPTOR' : _CACHERESULTSINMEMORY,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CacheResultsInMemory)
  })
_sym_db.RegisterMessage(CacheResultsInMemory)

ProgramControlledExpansion = _reflection.GeneratedProtocolMessageType('ProgramControlledExpansion', (_message.Message,), {
  'DESCRIPTOR' : _PROGRAMCONTROLLEDEXPANSION,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ProgramControlledExpansion)
  })
_sym_db.RegisterMessage(ProgramControlledExpansion)

NodalForceType = _reflection.GeneratedProtocolMessageType('NodalForceType', (_message.Message,), {
  'DESCRIPTOR' : _NODALFORCETYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.NodalForceType)
  })
_sym_db.RegisterMessage(NodalForceType)

ResultTimePointOptionsType = _reflection.GeneratedProtocolMessageType('ResultTimePointOptionsType', (_message.Message,), {
  'DESCRIPTOR' : _RESULTTIMEPOINTOPTIONSTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ResultTimePointOptionsType)
  })
_sym_db.RegisterMessage(ResultTimePointOptionsType)

ResultTimePointsOptions = _reflection.GeneratedProtocolMessageType('ResultTimePointsOptions', (_message.Message,), {
  'DESCRIPTOR' : _RESULTTIMEPOINTSOPTIONS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ResultTimePointsOptions)
  })
_sym_db.RegisterMessage(ResultTimePointsOptions)

MaxResults = _reflection.GeneratedProtocolMessageType('MaxResults', (_message.Message,), {
  'DESCRIPTOR' : _MAXRESULTS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.MaxResults)
  })
_sym_db.RegisterMessage(MaxResults)

OutputSettings = _reflection.GeneratedProtocolMessageType('OutputSettings', (_message.Message,), {
  'DESCRIPTOR' : _OUTPUTSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.OutputSettings)
  })
_sym_db.RegisterMessage(OutputSettings)

PostSettings = _reflection.GeneratedProtocolMessageType('PostSettings', (_message.Message,), {
  'DESCRIPTOR' : _POSTSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.PostSettings)
  })
_sym_db.RegisterMessage(PostSettings)

FutureIntentType = _reflection.GeneratedProtocolMessageType('FutureIntentType', (_message.Message,), {
  'DESCRIPTOR' : _FUTUREINTENTTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.FutureIntentType)
  })
_sym_db.RegisterMessage(FutureIntentType)

SolverUnitsControl = _reflection.GeneratedProtocolMessageType('SolverUnitsControl', (_message.Message,), {
  'DESCRIPTOR' : _SOLVERUNITSCONTROL,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.SolverUnitsControl)
  })
_sym_db.RegisterMessage(SolverUnitsControl)

FileControls = _reflection.GeneratedProtocolMessageType('FileControls', (_message.Message,), {
  'DESCRIPTOR' : _FILECONTROLS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.FileControls)
  })
_sym_db.RegisterMessage(FileControls)

CyclicSettings = _reflection.GeneratedProtocolMessageType('CyclicSettings', (_message.Message,), {
  'DESCRIPTOR' : _CYCLICSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CyclicSettings)
  })
_sym_db.RegisterMessage(CyclicSettings)

ConstantDampingType = _reflection.GeneratedProtocolMessageType('ConstantDampingType', (_message.Message,), {
  'DESCRIPTOR' : _CONSTANTDAMPINGTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ConstantDampingType)
  })
_sym_db.RegisterMessage(ConstantDampingType)

TransientDampingType = _reflection.GeneratedProtocolMessageType('TransientDampingType', (_message.Message,), {
  'DESCRIPTOR' : _TRANSIENTDAMPINGTYPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.TransientDampingType)
  })
_sym_db.RegisterMessage(TransientDampingType)

BetaVSFrequency = _reflection.GeneratedProtocolMessageType('BetaVSFrequency', (_message.Message,), {
  'DESCRIPTOR' : _BETAVSFREQUENCY,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.BetaVSFrequency)
  })
_sym_db.RegisterMessage(BetaVSFrequency)

ConstantDamping = _reflection.GeneratedProtocolMessageType('ConstantDamping', (_message.Message,), {
  'DESCRIPTOR' : _CONSTANTDAMPING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ConstantDamping)
  })
_sym_db.RegisterMessage(ConstantDamping)

BetaDamping = _reflection.GeneratedProtocolMessageType('BetaDamping', (_message.Message,), {
  'DESCRIPTOR' : _BETADAMPING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.BetaDamping)
  })
_sym_db.RegisterMessage(BetaDamping)

AlphaDamping = _reflection.GeneratedProtocolMessageType('AlphaDamping', (_message.Message,), {
  'DESCRIPTOR' : _ALPHADAMPING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.AlphaDamping)
  })
_sym_db.RegisterMessage(AlphaDamping)

NumericalDamping = _reflection.GeneratedProtocolMessageType('NumericalDamping', (_message.Message,), {
  'DESCRIPTOR' : _NUMERICALDAMPING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.NumericalDamping)
  })
_sym_db.RegisterMessage(NumericalDamping)

StructuralDampingCoefficient = _reflection.GeneratedProtocolMessageType('StructuralDampingCoefficient', (_message.Message,), {
  'DESCRIPTOR' : _STRUCTURALDAMPINGCOEFFICIENT,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.StructuralDampingCoefficient)
  })
_sym_db.RegisterMessage(StructuralDampingCoefficient)

RotordynamicsSettings = _reflection.GeneratedProtocolMessageType('RotordynamicsSettings', (_message.Message,), {
  'DESCRIPTOR' : _ROTORDYNAMICSSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.RotordynamicsSettings)
  })
_sym_db.RegisterMessage(RotordynamicsSettings)

AutoTimeStepping = _reflection.GeneratedProtocolMessageType('AutoTimeStepping', (_message.Message,), {
  'DESCRIPTOR' : _AUTOTIMESTEPPING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.AutoTimeStepping)
  })
_sym_db.RegisterMessage(AutoTimeStepping)

TimeStepping = _reflection.GeneratedProtocolMessageType('TimeStepping', (_message.Message,), {

  'Substeps' : _reflection.GeneratedProtocolMessageType('Substeps', (_message.Message,), {
    'DESCRIPTOR' : _TIMESTEPPING_SUBSTEPS,
    '__module__' : 'analysis_settings.ansys.common_pb2'
    # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.TimeStepping.Substeps)
    })
  ,

  'Times' : _reflection.GeneratedProtocolMessageType('Times', (_message.Message,), {
    'DESCRIPTOR' : _TIMESTEPPING_TIMES,
    '__module__' : 'analysis_settings.ansys.common_pb2'
    # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.TimeStepping.Times)
    })
  ,
  'DESCRIPTOR' : _TIMESTEPPING,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.TimeStepping)
  })
_sym_db.RegisterMessage(TimeStepping)
_sym_db.RegisterMessage(TimeStepping.Substeps)
_sym_db.RegisterMessage(TimeStepping.Times)

LineSearch = _reflection.GeneratedProtocolMessageType('LineSearch', (_message.Message,), {
  'DESCRIPTOR' : _LINESEARCH,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.LineSearch)
  })
_sym_db.RegisterMessage(LineSearch)

ConvergenceToleranceActivation = _reflection.GeneratedProtocolMessageType('ConvergenceToleranceActivation', (_message.Message,), {
  'DESCRIPTOR' : _CONVERGENCETOLERANCEACTIVATION,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ConvergenceToleranceActivation)
  })
_sym_db.RegisterMessage(ConvergenceToleranceActivation)

ConvergenceToleranceNorm = _reflection.GeneratedProtocolMessageType('ConvergenceToleranceNorm', (_message.Message,), {
  'DESCRIPTOR' : _CONVERGENCETOLERANCENORM,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ConvergenceToleranceNorm)
  })
_sym_db.RegisterMessage(ConvergenceToleranceNorm)

ConvergenceToleranceSource = _reflection.GeneratedProtocolMessageType('ConvergenceToleranceSource', (_message.Message,), {
  'DESCRIPTOR' : _CONVERGENCETOLERANCESOURCE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ConvergenceToleranceSource)
  })
_sym_db.RegisterMessage(ConvergenceToleranceSource)

ConvergenceTolerance = _reflection.GeneratedProtocolMessageType('ConvergenceTolerance', (_message.Message,), {
  'DESCRIPTOR' : _CONVERGENCETOLERANCE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.ConvergenceTolerance)
  })
_sym_db.RegisterMessage(ConvergenceTolerance)

StepSettings = _reflection.GeneratedProtocolMessageType('StepSettings', (_message.Message,), {
  'DESCRIPTOR' : _STEPSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.StepSettings)
  })
_sym_db.RegisterMessage(StepSettings)

FractureOutput = _reflection.GeneratedProtocolMessageType('FractureOutput', (_message.Message,), {
  'DESCRIPTOR' : _FRACTUREOUTPUT,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.FractureOutput)
  })
_sym_db.RegisterMessage(FractureOutput)

CrackShape = _reflection.GeneratedProtocolMessageType('CrackShape', (_message.Message,), {
  'DESCRIPTOR' : _CRACKSHAPE,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CrackShape)
  })
_sym_db.RegisterMessage(CrackShape)

CrackOutput = _reflection.GeneratedProtocolMessageType('CrackOutput', (_message.Message,), {
  'DESCRIPTOR' : _CRACKOUTPUT,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CrackOutput)
  })
_sym_db.RegisterMessage(CrackOutput)

CrackFrontExtensionNodeInfo = _reflection.GeneratedProtocolMessageType('CrackFrontExtensionNodeInfo', (_message.Message,), {
  'DESCRIPTOR' : _CRACKFRONTEXTENSIONNODEINFO,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CrackFrontExtensionNodeInfo)
  })
_sym_db.RegisterMessage(CrackFrontExtensionNodeInfo)

CrackSettings = _reflection.GeneratedProtocolMessageType('CrackSettings', (_message.Message,), {
  'DESCRIPTOR' : _CRACKSETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.CrackSettings)
  })
_sym_db.RegisterMessage(CrackSettings)

FractureSettings = _reflection.GeneratedProtocolMessageType('FractureSettings', (_message.Message,), {

  'CrackSettingsEntry' : _reflection.GeneratedProtocolMessageType('CrackSettingsEntry', (_message.Message,), {
    'DESCRIPTOR' : _FRACTURESETTINGS_CRACKSETTINGSENTRY,
    '__module__' : 'analysis_settings.ansys.common_pb2'
    # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.FractureSettings.CrackSettingsEntry)
    })
  ,
  'DESCRIPTOR' : _FRACTURESETTINGS,
  '__module__' : 'analysis_settings.ansys.common_pb2'
  # @@protoc_insertion_point(class_scope:ans.protocol.analysis_settings.ansys.common.FractureSettings)
  })
_sym_db.RegisterMessage(FractureSettings)
_sym_db.RegisterMessage(FractureSettings.CrackSettingsEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'H\003\252\002*Ans.Protocol.AnalysisSettings.ANSYS.Common'
  _FRACTURESETTINGS_CRACKSETTINGSENTRY._options = None
  _FRACTURESETTINGS_CRACKSETTINGSENTRY._serialized_options = b'8\001'
  _GLOBALREFERENCETEMPERATURE._serialized_start=108
  _GLOBALREFERENCETEMPERATURE._serialized_end=191
  _HARMONICMETHOD._serialized_start=193
  _HARMONICMETHOD._serialized_end=251
  _HARMONICMETHOD_ENUM._serialized_start=211
  _HARMONICMETHOD_ENUM._serialized_end=251
  _HARMONICVARIATIONTECHNOLOGY._serialized_start=253
  _HARMONICVARIATIONTECHNOLOGY._serialized_end=344
  _HARMONICVARIATIONTECHNOLOGY_ENUM._serialized_start=284
  _HARMONICVARIATIONTECHNOLOGY_ENUM._serialized_end=344
  _MODALFREQUENCYRANGE._serialized_start=346
  _MODALFREQUENCYRANGE._serialized_end=411
  _MODALFREQUENCYRANGE_ENUM._serialized_start=369
  _MODALFREQUENCYRANGE_ENUM._serialized_end=411
  _HARMONICMSUPSTORAGE._serialized_start=413
  _HARMONICMSUPSTORAGE._serialized_end=489
  _HARMONICMSUPSTORAGE_ENUM._serialized_start=436
  _HARMONICMSUPSTORAGE_ENUM._serialized_end=489
  _FREQUENCYSPACINGTYPE._serialized_start=491
  _FREQUENCYSPACINGTYPE._serialized_end=598
  _FREQUENCYSPACINGTYPE_ENUM._serialized_start=515
  _FREQUENCYSPACINGTYPE_ENUM._serialized_end=598
  _SPINSOFTENING._serialized_start=600
  _SPINSOFTENING._serialized_end=664
  _SPINSOFTENING_ENUM._serialized_start=617
  _SPINSOFTENING_ENUM._serialized_end=664
  _HARMONICSETTINGS._serialized_start=667
  _HARMONICSETTINGS._serialized_end=1709
  _MODALSETTINGS._serialized_start=1712
  _MODALSETTINGS._serialized_end=1949
  _SUBSTRUCTURESETTINGS._serialized_start=1952
  _SUBSTRUCTURESETTINGS._serialized_end=2107
  _SOLVERTYPE._serialized_start=2110
  _SOLVERTYPE._serialized_end=2301
  _SOLVERTYPE_ENUM._serialized_start=2125
  _SOLVERTYPE_ENUM._serialized_end=2301
  _MODEREUSE._serialized_start=2303
  _MODEREUSE._serialized_end=2363
  _MODEREUSE_ENUM._serialized_start=2316
  _MODEREUSE_ENUM._serialized_end=2363
  _USEEXISTINGMODESYMMFILE._serialized_start=2365
  _USEEXISTINGMODESYMMFILE._serialized_end=2439
  _USEEXISTINGMODESYMMFILE_ENUM._serialized_start=2316
  _USEEXISTINGMODESYMMFILE_ENUM._serialized_end=2363
  _NEWTONRAPHSONTYPE._serialized_start=2441
  _NEWTONRAPHSONTYPE._serialized_end=2546
  _NEWTONRAPHSONTYPE_ENUM._serialized_start=2462
  _NEWTONRAPHSONTYPE_ENUM._serialized_end=2546
  _USEWEAKSPRINGS._serialized_start=2548
  _USEWEAKSPRINGS._serialized_end=2613
  _USEWEAKSPRINGS_ENUM._serialized_start=2566
  _USEWEAKSPRINGS_ENUM._serialized_end=2613
  _WEAKSPRINGSSTIFFNESSTYPE._serialized_start=2615
  _WEAKSPRINGSSTIFFNESSTYPE._serialized_end=2697
  _WEAKSPRINGSSTIFFNESSTYPE_ENUM._serialized_start=2643
  _WEAKSPRINGSSTIFFNESSTYPE_ENUM._serialized_end=2697
  _WEAKSPRINGS._serialized_start=2700
  _WEAKSPRINGS._serialized_end=2987
  _PIVOTCHECKING._serialized_start=2989
  _PIVOTCHECKING._serialized_end=3075
  _PIVOTCHECKING_ENUM._serialized_start=3006
  _PIVOTCHECKING_ENUM._serialized_end=3075
  _STOREMODALRESULT._serialized_start=3077
  _STOREMODALRESULT._serialized_end=3160
  _STOREMODALRESULT_ENUM._serialized_start=3097
  _STOREMODALRESULT_ENUM._serialized_end=3160
  _EXPANDRESULTFROM._serialized_start=3162
  _EXPANDRESULTFROM._serialized_end=3279
  _EXPANDRESULTFROM_ENUM._serialized_start=3182
  _EXPANDRESULTFROM_ENUM._serialized_end=3279
  _CALCULATEPARTICIPATIONFACTORRESULT._serialized_start=3281
  _CALCULATEPARTICIPATIONFACTORRESULT._serialized_end=3366
  _CALCULATEPARTICIPATIONFACTORRESULT_ENUM._serialized_start=2316
  _CALCULATEPARTICIPATIONFACTORRESULT_ENUM._serialized_end=2363
  _COMBINERESULTFILES._serialized_start=3368
  _COMBINERESULTFILES._serialized_end=3437
  _COMBINERESULTFILES_ENUM._serialized_start=2316
  _COMBINERESULTFILES_ENUM._serialized_end=2363
  _CACHERESULTSINMEMORY._serialized_start=3439
  _CACHERESULTSINMEMORY._serialized_end=3518
  _CACHERESULTSINMEMORY_ENUM._serialized_start=3463
  _CACHERESULTSINMEMORY_ENUM._serialized_end=3518
  _PROGRAMCONTROLLEDEXPANSION._serialized_start=3520
  _PROGRAMCONTROLLEDEXPANSION._serialized_end=3636
  _PROGRAMCONTROLLEDEXPANSION_ENUM._serialized_start=3550
  _PROGRAMCONTROLLEDEXPANSION_ENUM._serialized_end=3636
  _NODALFORCETYPE._serialized_start=3638
  _NODALFORCETYPE._serialized_end=3699
  _NODALFORCETYPE_ENUM._serialized_start=3656
  _NODALFORCETYPE_ENUM._serialized_end=3699
  _RESULTTIMEPOINTOPTIONSTYPE._serialized_start=3701
  _RESULTTIMEPOINTOPTIONSTYPE._serialized_end=3791
  _RESULTTIMEPOINTOPTIONSTYPE_ENUM._serialized_start=3731
  _RESULTTIMEPOINTOPTIONSTYPE_ENUM._serialized_end=3791
  _RESULTTIMEPOINTSOPTIONS._serialized_start=3794
  _RESULTTIMEPOINTSOPTIONS._serialized_end=3926
  _MAXRESULTS._serialized_start=3928
  _MAXRESULTS._serialized_end=3955
  _OUTPUTSETTINGS._serialized_start=3958
  _OUTPUTSETTINGS._serialized_end=4613
  _POSTSETTINGS._serialized_start=4616
  _POSTSETTINGS._serialized_end=4835
  _FUTUREINTENTTYPE._serialized_start=4838
  _FUTUREINTENTTYPE._serialized_end=5437
  _FUTUREINTENTTYPE_ENUM._serialized_start=4859
  _FUTUREINTENTTYPE_ENUM._serialized_end=5437
  _SOLVERUNITSCONTROL._serialized_start=5439
  _SOLVERUNITSCONTROL._serialized_end=5498
  _SOLVERUNITSCONTROL_ENUM._serialized_start=5461
  _SOLVERUNITSCONTROL_ENUM._serialized_end=5498
  _FILECONTROLS._serialized_start=5501
  _FILECONTROLS._serialized_end=5832
  _CYCLICSETTINGS._serialized_start=5835
  _CYCLICSETTINGS._serialized_end=6021
  _CONSTANTDAMPINGTYPE._serialized_start=6023
  _CONSTANTDAMPINGTYPE._serialized_end=6088
  _CONSTANTDAMPINGTYPE_ENUM._serialized_start=369
  _CONSTANTDAMPINGTYPE_ENUM._serialized_end=411
  _TRANSIENTDAMPINGTYPE._serialized_start=6090
  _TRANSIENTDAMPINGTYPE._serialized_end=6158
  _TRANSIENTDAMPINGTYPE_ENUM._serialized_start=6114
  _TRANSIENTDAMPINGTYPE_ENUM._serialized_end=6158
  _BETAVSFREQUENCY._serialized_start=6160
  _BETAVSFREQUENCY._serialized_end=6228
  _CONSTANTDAMPING._serialized_start=6231
  _CONSTANTDAMPING._serialized_end=6365
  _BETADAMPING._serialized_start=6368
  _BETADAMPING._serialized_end=6515
  _ALPHADAMPING._serialized_start=6517
  _ALPHADAMPING._serialized_end=6546
  _NUMERICALDAMPING._serialized_start=6549
  _NUMERICALDAMPING._serialized_end=6686
  _STRUCTURALDAMPINGCOEFFICIENT._serialized_start=6688
  _STRUCTURALDAMPINGCOEFFICIENT._serialized_end=6733
  _ROTORDYNAMICSSETTINGS._serialized_start=6736
  _ROTORDYNAMICSSETTINGS._serialized_end=7009
  _AUTOTIMESTEPPING._serialized_start=7011
  _AUTOTIMESTEPPING._serialized_end=7078
  _AUTOTIMESTEPPING_ENUM._serialized_start=2566
  _AUTOTIMESTEPPING_ENUM._serialized_end=2613
  _TIMESTEPPING._serialized_start=7081
  _TIMESTEPPING._serialized_end=7522
  _TIMESTEPPING_SUBSTEPS._serialized_start=7383
  _TIMESTEPPING_SUBSTEPS._serialized_end=7444
  _TIMESTEPPING_TIMES._serialized_start=7446
  _TIMESTEPPING_TIMES._serialized_end=7504
  _LINESEARCH._serialized_start=7524
  _LINESEARCH._serialized_end=7585
  _LINESEARCH_ENUM._serialized_start=2566
  _LINESEARCH_ENUM._serialized_end=2613
  _CONVERGENCETOLERANCEACTIVATION._serialized_start=7587
  _CONVERGENCETOLERANCEACTIVATION._serialized_end=7668
  _CONVERGENCETOLERANCEACTIVATION_ENUM._serialized_start=2566
  _CONVERGENCETOLERANCEACTIVATION_ENUM._serialized_end=2613
  _CONVERGENCETOLERANCENORM._serialized_start=7670
  _CONVERGENCETOLERANCENORM._serialized_end=7739
  _CONVERGENCETOLERANCENORM_ENUM._serialized_start=7698
  _CONVERGENCETOLERANCENORM_ENUM._serialized_end=7739
  _CONVERGENCETOLERANCESOURCE._serialized_start=7741
  _CONVERGENCETOLERANCESOURCE._serialized_end=7815
  _CONVERGENCETOLERANCESOURCE_ENUM._serialized_start=7771
  _CONVERGENCETOLERANCESOURCE_ENUM._serialized_end=7815
  _CONVERGENCETOLERANCE._serialized_start=7818
  _CONVERGENCETOLERANCE._serialized_end=8187
  _STEPSETTINGS._serialized_start=8189
  _STEPSETTINGS._serialized_end=8251
  _FRACTUREOUTPUT._serialized_start=8253
  _FRACTUREOUTPUT._serialized_end=8354
  _FRACTUREOUTPUT_ENUM._serialized_start=8271
  _FRACTUREOUTPUT_ENUM._serialized_end=8354
  _CRACKSHAPE._serialized_start=8356
  _CRACKSHAPE._serialized_end=8420
  _CRACKSHAPE_ENUM._serialized_start=8370
  _CRACKSHAPE_ENUM._serialized_end=8420
  _CRACKOUTPUT._serialized_start=8422
  _CRACKOUTPUT._serialized_end=8542
  _CRACKFRONTEXTENSIONNODEINFO._serialized_start=8544
  _CRACKFRONTEXTENSIONNODEINFO._serialized_end=8623
  _CRACKSETTINGS._serialized_start=8626
  _CRACKSETTINGS._serialized_end=9044
  _FRACTURESETTINGS._serialized_start=9047
  _FRACTURESETTINGS._serialized_end=9455
  _FRACTURESETTINGS_CRACKSETTINGSENTRY._serialized_start=9343
  _FRACTURESETTINGS_CRACKSETTINGSENTRY._serialized_end=9455
# @@protoc_insertion_point(module_scope)
