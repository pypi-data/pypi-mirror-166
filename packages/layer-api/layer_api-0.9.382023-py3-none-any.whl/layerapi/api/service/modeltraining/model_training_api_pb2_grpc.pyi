"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import layerapi.api.service.modeltraining.model_training_api_pb2
import grpc

class ModelTrainingAPIStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetSourceCodeUploadCredentials: grpc.UnaryUnaryMultiCallable[
        api.service.modeltraining.model_training_api_pb2.GetSourceCodeUploadCredentialsRequest,
        api.service.modeltraining.model_training_api_pb2.GetSourceCodeUploadCredentialsResponse]

    StartModelTraining: grpc.UnaryUnaryMultiCallable[
        api.service.modeltraining.model_training_api_pb2.StartModelTrainingRequest,
        api.service.modeltraining.model_training_api_pb2.StartModelTrainingResponse]
    """model train"""

    CancelModelTraining: grpc.UnaryUnaryMultiCallable[
        api.service.modeltraining.model_training_api_pb2.CancelModelTrainingRequest,
        api.service.modeltraining.model_training_api_pb2.CancelModelTrainingResponse]
    """CancelModelTraining is not guaranteed to succeed and shall return return immediately.
    A client can use the GetModelTrainStatus to know if cancellation eventually succeeds.
    """

    GetModelTrainStatus: grpc.UnaryUnaryMultiCallable[
        api.service.modeltraining.model_training_api_pb2.GetModelTrainStatusRequest,
        api.service.modeltraining.model_training_api_pb2.GetModelTrainStatusResponse]


class ModelTrainingAPIServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetSourceCodeUploadCredentials(self,
        request: api.service.modeltraining.model_training_api_pb2.GetSourceCodeUploadCredentialsRequest,
        context: grpc.ServicerContext,
    ) -> api.service.modeltraining.model_training_api_pb2.GetSourceCodeUploadCredentialsResponse: ...

    @abc.abstractmethod
    def StartModelTraining(self,
        request: api.service.modeltraining.model_training_api_pb2.StartModelTrainingRequest,
        context: grpc.ServicerContext,
    ) -> api.service.modeltraining.model_training_api_pb2.StartModelTrainingResponse:
        """model train"""
        pass

    @abc.abstractmethod
    def CancelModelTraining(self,
        request: api.service.modeltraining.model_training_api_pb2.CancelModelTrainingRequest,
        context: grpc.ServicerContext,
    ) -> api.service.modeltraining.model_training_api_pb2.CancelModelTrainingResponse:
        """CancelModelTraining is not guaranteed to succeed and shall return return immediately.
        A client can use the GetModelTrainStatus to know if cancellation eventually succeeds.
        """
        pass

    @abc.abstractmethod
    def GetModelTrainStatus(self,
        request: api.service.modeltraining.model_training_api_pb2.GetModelTrainStatusRequest,
        context: grpc.ServicerContext,
    ) -> api.service.modeltraining.model_training_api_pb2.GetModelTrainStatusResponse: ...


def add_ModelTrainingAPIServicer_to_server(servicer: ModelTrainingAPIServicer, server: grpc.Server) -> None: ...
