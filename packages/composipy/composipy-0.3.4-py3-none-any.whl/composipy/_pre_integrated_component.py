#This file contains the pre integration of the components of shape function
#These integration are large, so thats why this file was created
#Use eval() to evaluate the integrations

integration_KGx_component = 'Piecewise((pi**2*i*k*(a*i*sin(pi*i)*cos(pi*k)/(pi*i**2 - pi*k**2) - a*k*sin(pi*k)*cos(pi*i)/(pi*i**2 - pi*k**2))*(-b*j*sin(pi*l)*cos(pi*j)/(pi*j**2 - pi*l**2) + b*l*sin(pi*j)*cos(pi*l)/(pi*j**2 - pi*l**2))/a**2, Ne(i, k) & Ne(j, l)), (pi**2*i*k*(a*i*sin(pi*i)*cos(pi*k)/(pi*i**2 - pi*k**2) - a*k*sin(pi*k)*cos(pi*i)/(pi*i**2 - pi*k**2))*(b*sin(pi*l)**2/2 + b*cos(pi*l)**2/2 - b*sin(pi*l)*cos(pi*l)/(2*pi*l))/a**2, Ne(i, k)), (pi**2*i*k*(-b*j*sin(pi*l)*cos(pi*j)/(pi*j**2 - pi*l**2) + b*l*sin(pi*j)*cos(pi*l)/(pi*j**2 - pi*l**2))*(a*sin(pi*k)**2/2 + a*cos(pi*k)**2/2 + a*sin(pi*k)*cos(pi*k)/(2*pi*k))/a**2, Ne(j, l)), (pi**2*i*k*(a*sin(pi*k)**2/2 + a*cos(pi*k)**2/2 + a*sin(pi*k)*cos(pi*k)/(2*pi*k))*(b*sin(pi*l)**2/2 + b*cos(pi*l)**2/2 - b*sin(pi*l)*cos(pi*l)/(2*pi*l))/a**2, True))'

integration_K_component_1 = 'Piecewise((-2*pi**3*D31*b**2*i*j*k**3*l/(a*(pi*j**2 - pi*l**2)*(a*b**2*i**2 - a*b**2*k**2)) + 2*pi**3*D31*b*i*j*k**3*(b*j*sin(pi*b*j/b)*sin(pi*b*l/b)/(pi*j**2 - pi*l**2) + b*l*cos(pi*b*j/b)*cos(pi*b*l/b)/(pi*j**2 - pi*l**2))/(a*(a*b**2*i**2 - a*b**2*k**2)) - 2*pi**3*D32*a*i*j*k*l**3/((pi*j**2 - pi*l**2)*(a*b**2*i**2 - a*b**2*k**2)) + 2*pi**3*D32*a*i*j*k*l**2*(b*j*sin(pi*b*j/b)*sin(pi*b*l/b)/(pi*j**2 - pi*l**2) + b*l*cos(pi*b*j/b)*cos(pi*b*l/b)/(pi*j**2 - pi*l**2))/(b*(a*b**2*i**2 - a*b**2*k**2)) + pi**2*l**2*(2*D32*a*b*i**2*j*l*sin(pi*a*i/a)*sin(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D32*a*b*i*j*k*l*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/b**2 - pi**2*l**2*(-D12*b**2*i**3*j*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D12*b**2*i**3*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D12*b**2*i**2*j*k*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(a*b*i**2*j**'
integration_K_component_2 = '2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D12*b**2*i**2*k*l*sin(pi*a*i/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D22*a**2*i*j**3*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D22*a**2*i*j**2*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D22*a**2*j**3*k*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D22*a**2*j**2*k*l*sin(pi*a*i/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D32*a*b*i**2*j**2*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*j/b)*sin(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D32*a*b*i**2*j*l*sin(pi*a*i/a)*sin(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D32*a*b*i*j**2*k*sin(pi*b*j/b)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D32*a*b*i*j*k*l*cos(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/b**2 + 2*pi**2*k*l*(-D13*b**2*i**3*j/(a*b*i**2*j**2 - a*b*i*'
integration_K_component_3 = '*2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*i*j**3/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/(a*b) - 2*pi**2*k*l*(-D13*b**2*i**3*j*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D13*b**2*i**2*j*k*sin(pi*a*i/a)*sin(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*i*j**3*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*j**3*k*sin(pi*a*i/a)*sin(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/(a*b) - 2*pi**2*k*l*(-D13*b**2*i**3*j*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D13*b**2*i**3*l*sin(pi*b*j/b)*sin(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*i*j**3*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*i*j**2*l*sin(pi*b*j/b)*sin(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/(a*b) + 2*pi**2*k*l*(-D13*b**2*i**3*j*cos(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D13*b**2*i**3*l*sin(pi*b*j/b)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D13*b**2*i**2*j*k*sin(pi*a*i/a)*sin(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D13*b**2*i**2*k*l*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*j/b)*sin(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*i*j**3*cos(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*i*j**2*l*sin(pi*b*j/b)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*j**3*k*sin(pi*a*i/a)*sin(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D23*a**2*j**2*k*l*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*j/b)*sin(pi*b*l/b)/(a*b*i'
integration_K_component_4 = '**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D33*a*b*i**2*j**2*sin(pi*a*i/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - 2*D33*a*b*i**2*j*l*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - 2*D33*a*b*i*j**2*k*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D33*a*b*i*j*k*l*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/(a*b) + pi**2*k**2*(2*D31*a*b*i**2*j*l*sin(pi*a*i/a)*sin(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D31*a*b*i*j*k*l*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/a**2 - pi**2*k**2*(-D11*b**2*i**3*j*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D11*b**2*i**3*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D11*b**2*i**2*j*k*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D11*b**2*i**2*k*l*sin(pi*a*i/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D21*a**2*i*j**3*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D21*a**2*i*j**2*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + D21*a**2*j**3*k*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) - D21*a**2*j**2*k*l*sin(pi*a*i/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D31*a*b*i**2*j**2*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*j/b)*sin(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D31*a*b*i**2*j*l*sin(pi*a*i/a)*sin(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D31*a*b*i*j**2*k*sin(pi*b*j/b)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*a*k/a)/(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2) + 2*D31*a*b*i*j*k*l*cos(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*j/b)*cos(pi*b*l/b)/'
integration_K_component_5 = '(a*b*i**2*j**2 - a*b*i**2*l**2 - a*b*j**2*k**2 + a*b*k**2*l**2))/a**2, Ne(i, k) & Ne(j, l)), (pi**2*D31*b**2*i*j*k**3*sin(pi*b*l/b)**2/(a*l*(a*b**2*i**2 - a*b**2*k**2)) + pi**2*D32*a*i*j*k*l*sin(pi*b*l/b)**2/(a*b**2*i**2 - a*b**2*k**2) - pi**2*l**2*(-D12*b**3*i**3*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + D12*b**3*i**2*k*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D12*b*b**2*i**3*l*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*i/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D12*b*b**2*i**3*l*sin(pi*a*k/a)*cos(pi*a*i/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D12*b*b**2*i**2*k*l*sin(pi*a*i/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D12*b*b**2*i**2*k*l*sin(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - D22*a**2*b*i*l**2*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + D22*a**2*b*k*l**2*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D22*a**2*b*i*l**3*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*i/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D22*a**2*b*i*l**3*sin(pi*a*k/a)*cos(pi*a*i/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D22*a**2*b*k*l**3*sin(pi*a*i/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D22*a**2*b*k*l**3*sin(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + 2*D32*a*b**2*i**2*l*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k*'
integration_K_component_6 = '*2*l) + 2*D32*a*b**2*i*k*l*sin(pi*b*l/b)**2*cos(pi*a*i/a)*cos(pi*a*k/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l))/b**2 - 2*pi**2*k*l*(D13*b**2*i**3*sin(pi*b*l/b)**2/(2*a*b*i**2*l - 2*a*b*k**2*l) + D23*a**2*i*l**2*sin(pi*b*l/b)**2/(2*a*b*i**2*l - 2*a*b*k**2*l))/(a*b) + 2*pi**2*k*l*(D13*b**2*i**3*sin(pi*b*l/b)**2*cos(pi*a*i/a)*cos(pi*a*k/a)/(2*a*b*i**2*l - 2*a*b*k**2*l) + D13*b**2*i**2*k*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*l/b)**2/(2*a*b*i**2*l - 2*a*b*k**2*l) + D23*a**2*i*l**2*sin(pi*b*l/b)**2*cos(pi*a*i/a)*cos(pi*a*k/a)/(2*a*b*i**2*l - 2*a*b*k**2*l) + D23*a**2*k*l**2*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*l/b)**2/(2*a*b*i**2*l - 2*a*b*k**2*l) + 2*D33*a*b*i**2*l*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a*b*i**2*l - 2*a*b*k**2*l) - 2*D33*a*b*i*k*l*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(2*a*b*i**2*l - 2*a*b*k**2*l) + 2*pi*D33*a*b*i**2*l**2*sin(pi*a*i/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(2*a*b*i**2*l - 2*a*b*k**2*l) + 2*pi*D33*a*b*i**2*l**2*sin(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(2*a*b*i**2*l - 2*a*b*k**2*l) - 2*pi*D33*a*b*i*k*l**2*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*i/a)/(2*a*b*i**2*l - 2*a*b*k**2*l) - 2*pi*D33*a*b*i*k*l**2*sin(pi*a*k/a)*cos(pi*a*i/a)*cos(pi*b*l/b)**2/(2*a*b*i**2*l - 2*a*b*k**2*l))/(a*b) - pi**2*k**2*(-D11*b**3*i**3*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + D11*b**3*i**2*k*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D11*b*b**2*i**3*l*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*i/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D11*b*b**2*i**3*l*sin(pi*a*k/a)*cos(pi*a*i/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D11*b*b**2*i**2*k*l*sin(pi*a*i/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D11*b*b**2*i**2*k*l*sin(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - D21*a**2*b*i*l**2*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*i/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + D21*a**2*b*k*l**2*sin(pi*a*i/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D21*a**2*b*i*l**3*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*i/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + pi*D21*a**2*b*i*l**3*sin(pi*a*k/a)*cos(pi*a*i/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D21*a**2*b*k*l**3*sin(pi*'
integration_K_component_7 = 'a*i/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) - pi*D21*a**2*b*k*l**3*sin(pi*a*i/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + 2*D31*a*b**2*i**2*l*sin(pi*a*i/a)*sin(pi*a*k/a)*sin(pi*b*l/b)**2/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l) + 2*D31*a*b**2*i*k*l*sin(pi*b*l/b)**2*cos(pi*a*i/a)*cos(pi*a*k/a)/(2*a*b**2*i**2*l - 2*a*b**2*k**2*l))/a**2, Ne(i, k)), (2*pi**2*D31*b*j*k**3*l*sin(pi*a*k/a)**2/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + 2*pi**2*D32*a**2*j*k*l**3*sin(pi*a*k/a)**2/(b*(2*a**2*b*j**2*k - 2*a**2*b*k*l**2)) - pi**2*l**2*(-D12*a*b**2*j*k**2*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + D12*a*b**2*k**2*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D12*a*b**2*j*k**3*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D12*a*b**2*j*k**3*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D12*a*b**2*k**3*l*sin(pi*a*k/a)**2*sin(pi*b*j/b)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D12*a*b**2*k**3*l*sin(pi*b*j/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - D22*a**3*j**3*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + D22*a**3*j**2*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D22*a*a**2*j**3*k*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D22*a*a**2*j**3*k*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D22*a*a**2*j**2*k*l*sin(pi*a*k/a)**2*sin(pi*b*j/b)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D22*a*a**2*j**2*k*l*sin(pi*b*j/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + 2*D32*a**2*b*j**2*k*sin(pi*a*k/a)**2*sin(pi*b*j/b)*sin(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + 2*D32*a**2*b*j*k*l*sin(pi*a*k/a)**2*cos'
integration_K_component_8 = '(pi*b*j/b)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2))/b**2 - 2*pi**2*k*l*(D13*b**2*j*k**2*sin(pi*a*k/a)**2/(2*a*b*j**2*k - 2*a*b*k*l**2) + D23*a**2*j**3*sin(pi*a*k/a)**2/(2*a*b*j**2*k - 2*a*b*k*l**2))/(a*b) + 2*pi**2*k*l*(D13*b**2*j*k**2*sin(pi*a*k/a)**2*cos(pi*b*j/b)*cos(pi*b*l/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) + D13*b**2*k**2*l*sin(pi*a*k/a)**2*sin(pi*b*j/b)*sin(pi*b*l/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) + D23*a**2*j**3*sin(pi*a*k/a)**2*cos(pi*b*j/b)*cos(pi*b*l/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) + D23*a**2*j**2*l*sin(pi*a*k/a)**2*sin(pi*b*j/b)*sin(pi*b*l/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) + 2*D33*a*b*j**2*k*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) - 2*D33*a*b*j*k*l*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) + 2*pi*D33*a*b*j**2*k**2*sin(pi*a*k/a)**2*sin(pi*b*j/b)*cos(pi*b*l/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) + 2*pi*D33*a*b*j**2*k**2*sin(pi*b*j/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) - 2*pi*D33*a*b*j*k**2*l*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*j/b)/(2*a*b*j**2*k - 2*a*b*k*l**2) - 2*pi*D33*a*b*j*k**2*l*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*j/b)/(2*a*b*j**2*k - 2*a*b*k*l**2))/(a*b) - pi**2*k**2*(-D11*a*b**2*j*k**2*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + D11*a*b**2*k**2*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D11*a*b**2*j*k**3*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D11*a*b**2*j*k**3*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D11*a*b**2*k**3*l*sin(pi*a*k/a)**2*sin(pi*b*j/b)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D11*a*b**2*k**3*l*sin(pi*b*j/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - D21*'
integration_K_component_9 = 'a**3*j**3*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + D21*a**3*j**2*l*sin(pi*a*k/a)*sin(pi*b*j/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D21*a*a**2*j**3*k*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + pi*D21*a*a**2*j**3*k*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*j/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D21*a*a**2*j**2*k*l*sin(pi*a*k/a)**2*sin(pi*b*j/b)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) - pi*D21*a*a**2*j**2*k*l*sin(pi*b*j/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + 2*D31*a**2*b*j**2*k*sin(pi*a*k/a)**2*sin(pi*b*j/b)*sin(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2) + 2*D31*a**2*b*j*k*l*sin(pi*a*k/a)**2*cos(pi*b*j/b)*cos(pi*b*l/b)/(2*a**2*b*j**2*k - 2*a**2*b*k*l**2))/a**2, Ne(j, l)), (-pi**2*l**2*(-D12*b*k*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(4*a*l) + pi*D12*b*k*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(4*a) + pi*D12*b*k*sin(pi*a*k/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(4*a) + pi*D12*a*b*k**2*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*l/b)/(4*a**2*l) + pi*D12*a*b*k**2*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(4*a**2*l) - pi**2*D12*a*b*k**2*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/(4*a**2) - pi**2*D12*a*b*k**2*sin(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*a**2) - pi**2*D12*a*b*k**2*sin(pi*b*l/b)**2*cos(pi*a*k/a)**2/(4*a**2) - pi**2*D12*a*b*k**2*cos(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*a**2) - D22*a*l*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(4*b*k) + pi*D22*a*b*l**2*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(4*b**2*k) + pi*D22*a*b*l**2*sin(pi*a*k/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(4*b**2*k) + pi*D22*a*l*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*l/b)/(4*b) + pi*D22*a*l*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(4*b) - pi**2*D22*a*b*l**2*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/(4*b**2) - pi**2*D22*a*b*l**2*sin(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*b**2) - pi**2*D22*a*b*l**2*sin(pi*b*l/b)**2*cos(pi*a*k/a)**2/(4*b**2) - pi**2*D22*a*b*l**2*cos(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*b**2) + D32*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/2)/b**2 + 2*pi**2*k*l*(-D13*b*k*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/(4*a*l) - D23*a*l*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/(4*b*k) + D33*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/2 + pi*D33*b*l*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(2*b)'
integration_K_component_10 = '+ pi*D33*b*l*sin(pi*a*k/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(2*b) + pi*D33*a*k*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*l/b)/(2*a) + pi*D33*a*k*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(2*a) + pi**2*D33*a*b*k*l*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/(2*a*b) + pi**2*D33*a*b*k*l*sin(pi*a*k/a)**2*cos(pi*b*l/b)**2/(2*a*b) + pi**2*D33*a*b*k*l*sin(pi*b*l/b)**2*cos(pi*a*k/a)**2/(2*a*b) + pi**2*D33*a*b*k*l*cos(pi*a*k/a)**2*cos(pi*b*l/b)**2/(2*a*b))/(a*b) - pi**2*k**2*(-D11*b*k*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(4*a*l) + pi*D11*b*k*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(4*a) + pi*D11*b*k*sin(pi*a*k/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(4*a) + pi*D11*a*b*k**2*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*l/b)/(4*a**2*l) + pi*D11*a*b*k**2*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(4*a**2*l) - pi**2*D11*a*b*k**2*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/(4*a**2) - pi**2*D11*a*b*k**2*sin(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*a**2) - pi**2*D11*a*b*k**2*sin(pi*b*l/b)**2*cos(pi*a*k/a)**2/(4*a**2) - pi**2*D11*a*b*k**2*cos(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*a**2) - D21*a*l*sin(pi*a*k/a)*sin(pi*b*l/b)*cos(pi*a*k/a)*cos(pi*b*l/b)/(4*b*k) + pi*D21*a*b*l**2*sin(pi*a*k/a)*sin(pi*b*l/b)**2*cos(pi*a*k/a)/(4*b**2*k) + pi*D21*a*b*l**2*sin(pi*a*k/a)*cos(pi*a*k/a)*cos(pi*b*l/b)**2/(4*b**2*k) + pi*D21*a*l*sin(pi*a*k/a)**2*sin(pi*b*l/b)*cos(pi*b*l/b)/(4*b) + pi*D21*a*l*sin(pi*b*l/b)*cos(pi*a*k/a)**2*cos(pi*b*l/b)/(4*b) - pi**2*D21*a*b*l**2*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/(4*b**2) - pi**2*D21*a*b*l**2*sin(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*b**2) - pi**2*D21*a*b*l**2*sin(pi*b*l/b)**2*cos(pi*a*k/a)**2/(4*b**2) - pi**2*D21*a*b*l**2*cos(pi*a*k/a)**2*cos(pi*b*l/b)**2/(4*b**2) + D31*sin(pi*a*k/a)**2*sin(pi*b*l/b)**2/2)/a**2, True))'

integration_K_component = integration_K_component_1 +\
                        integration_K_component_2 +\
                        integration_K_component_3 +\
                        integration_K_component_4 +\
                        integration_K_component_5 +\
                        integration_K_component_6 +\
                        integration_K_component_7 +\
                        integration_K_component_8 +\
                        integration_K_component_9 +\
                        integration_K_component_10