# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.7

import enum
import datetime
import sys
import types
import typing

import winsdk._winrt as _winrt
import winsdk.windows.foundation
import winsdk.windows.foundation.collections
import winsdk.windows.ui.input.inking

class InkAnalysisDrawingKind(enum.IntEnum):
    DRAWING = 0
    CIRCLE = 1
    ELLIPSE = 2
    TRIANGLE = 3
    ISOSCELES_TRIANGLE = 4
    EQUILATERAL_TRIANGLE = 5
    RIGHT_TRIANGLE = 6
    QUADRILATERAL = 7
    RECTANGLE = 8
    SQUARE = 9
    DIAMOND = 10
    TRAPEZOID = 11
    PARALLELOGRAM = 12
    PENTAGON = 13
    HEXAGON = 14

class InkAnalysisNodeKind(enum.IntEnum):
    UNCLASSIFIED_INK = 0
    ROOT = 1
    WRITING_REGION = 2
    PARAGRAPH = 3
    LINE = 4
    INK_WORD = 5
    INK_BULLET = 6
    INK_DRAWING = 7
    LIST_ITEM = 8

class InkAnalysisStatus(enum.IntEnum):
    UPDATED = 0
    UNCHANGED = 1

class InkAnalysisStrokeKind(enum.IntEnum):
    AUTO = 0
    WRITING = 1
    DRAWING = 2

Self = typing.TypeVar('Self')

class InkAnalysisInkBullet(_winrt.Object):
    recognized_text: str
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisInkBullet: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisInkDrawing(_winrt.Object):
    center: winsdk.windows.foundation.Point
    drawing_kind: InkAnalysisDrawingKind
    points: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisInkDrawing: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisInkWord(_winrt.Object):
    recognized_text: str
    text_alternates: typing.Optional[winsdk.windows.foundation.collections.IVectorView[str]]
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisInkWord: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisLine(_winrt.Object):
    indent_level: _winrt.Int32
    recognized_text: str
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisLine: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisListItem(_winrt.Object):
    recognized_text: str
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisListItem: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisNode(_winrt.Object):
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisNode: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisParagraph(_winrt.Object):
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    recognized_text: str
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisParagraph: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisResult(_winrt.Object):
    status: InkAnalysisStatus
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisResult: ...

class InkAnalysisRoot(_winrt.Object):
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    recognized_text: str
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisRoot: ...
    def find_nodes(self, node_kind: InkAnalysisNodeKind) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalysisWritingRegion(_winrt.Object):
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    recognized_text: str
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalysisWritingRegion: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class InkAnalyzer(_winrt.Object):
    analysis_root: typing.Optional[InkAnalysisRoot]
    is_analyzing: _winrt.Boolean
    @staticmethod
    def _from(obj: _winrt.Object) -> InkAnalyzer: ...
    def __new__(cls: typing.Type[InkAnalyzer]) -> InkAnalyzer:...
    def add_data_for_stroke(self, stroke: typing.Optional[winsdk.windows.ui.input.inking.InkStroke]) -> None: ...
    def add_data_for_strokes(self, strokes: typing.Iterable[winsdk.windows.ui.input.inking.InkStroke]) -> None: ...
    def analyze_async(self) -> winsdk.windows.foundation.IAsyncOperation[InkAnalysisResult]: ...
    def clear_data_for_all_strokes(self) -> None: ...
    def remove_data_for_stroke(self, stroke_id: _winrt.UInt32) -> None: ...
    def remove_data_for_strokes(self, stroke_ids: typing.Iterable[_winrt.UInt32]) -> None: ...
    def replace_data_for_stroke(self, stroke: typing.Optional[winsdk.windows.ui.input.inking.InkStroke]) -> None: ...
    def set_stroke_data_kind(self, stroke_id: _winrt.UInt32, stroke_kind: InkAnalysisStrokeKind) -> None: ...

class IInkAnalysisNode(_winrt.Object):
    bounding_rect: winsdk.windows.foundation.Rect
    children: typing.Optional[winsdk.windows.foundation.collections.IVectorView[IInkAnalysisNode]]
    id: _winrt.UInt32
    kind: InkAnalysisNodeKind
    parent: typing.Optional[IInkAnalysisNode]
    rotated_bounding_rect: typing.Optional[winsdk.windows.foundation.collections.IVectorView[winsdk.windows.foundation.Point]]
    @staticmethod
    def _from(obj: _winrt.Object) -> IInkAnalysisNode: ...
    def get_stroke_ids(self) -> typing.Optional[winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]]: ...

class IInkAnalyzerFactory(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> IInkAnalyzerFactory: ...
    def create_analyzer(self) -> typing.Optional[InkAnalyzer]: ...

