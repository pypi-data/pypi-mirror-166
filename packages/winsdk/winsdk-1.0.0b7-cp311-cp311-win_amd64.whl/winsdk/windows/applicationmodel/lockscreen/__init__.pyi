# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.7

import datetime
import sys
import types
import typing

import winsdk._winrt as _winrt
import winsdk.windows.foundation
import winsdk.windows.foundation.collections
import winsdk.windows.storage.streams

Self = typing.TypeVar('Self')

class LockApplicationHost(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> LockApplicationHost: ...
    @staticmethod
    def get_for_current_view() -> typing.Optional[LockApplicationHost]: ...
    def request_unlock(self) -> None: ...
    def add_unlocking(self, handler: winsdk.windows.foundation.TypedEventHandler[LockApplicationHost, LockScreenUnlockingEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_unlocking(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class LockScreenBadge(_winrt.Object):
    automation_name: str
    glyph: typing.Optional[winsdk.windows.storage.streams.IRandomAccessStream]
    logo: typing.Optional[winsdk.windows.storage.streams.IRandomAccessStream]
    number: typing.Optional[typing.Optional[_winrt.UInt32]]
    @staticmethod
    def _from(obj: _winrt.Object) -> LockScreenBadge: ...
    def launch_app(self) -> None: ...

class LockScreenInfo(_winrt.Object):
    alarm_icon: typing.Optional[winsdk.windows.storage.streams.IRandomAccessStream]
    badges: typing.Optional[winsdk.windows.foundation.collections.IVectorView[LockScreenBadge]]
    detail_text: typing.Optional[winsdk.windows.foundation.collections.IVectorView[str]]
    lock_screen_image: typing.Optional[winsdk.windows.storage.streams.IRandomAccessStream]
    @staticmethod
    def _from(obj: _winrt.Object) -> LockScreenInfo: ...
    def add_alarm_icon_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[LockScreenInfo, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_alarm_icon_changed(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...
    def add_badges_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[LockScreenInfo, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_badges_changed(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...
    def add_detail_text_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[LockScreenInfo, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_detail_text_changed(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...
    def add_lock_screen_image_changed(self, handler: winsdk.windows.foundation.TypedEventHandler[LockScreenInfo, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    def remove_lock_screen_image_changed(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class LockScreenUnlockingDeferral(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> LockScreenUnlockingDeferral: ...
    def complete(self) -> None: ...

class LockScreenUnlockingEventArgs(_winrt.Object):
    deadline: datetime.datetime
    @staticmethod
    def _from(obj: _winrt.Object) -> LockScreenUnlockingEventArgs: ...
    def get_deferral(self) -> typing.Optional[LockScreenUnlockingDeferral]: ...

