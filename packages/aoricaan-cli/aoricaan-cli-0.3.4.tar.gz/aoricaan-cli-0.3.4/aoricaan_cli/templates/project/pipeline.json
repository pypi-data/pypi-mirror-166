{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Build a basic pipeline",
  "Parameters": {
    "Environment": {
      "Type": "String",
      "AllowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "Description": "Environment name."
    },
    "AppName": {
      "Type": "String",
      "ConstraintDescription": "[a-z]+",
      "Description": "The project name."
    },
    "Branch": {
      "Type": "String",
      "Description": "Branch name for deploy de project."
    },
    "Repository": {
      "Type": "String",
      "Description": "Repository name."
    },
    "PrincipalTemplate": {
      "Type": "String",
      "Description": "Name of the main template in the project."
    },
    "ParametersTemplate": {
      "Type": "String",
      "Description": "One json string with the all parameter use in the PrincipalTemplate."
    }
  },
  "Resources": {
    "AppPipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Environment"
              },
              {
                "Ref": "AppName"
              },
              "pipeline"
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "RoleCodePipeline",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": {
                  "Fn::Sub": "Source${AppName}"
                },
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CodeCommit"
                },
                "OutputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Configuration": {
                  "BranchName": {
                    "Ref": "Branch"
                  },
                  "RepositoryName": {
                    "Ref": "Repository"
                  },
                  "PollForSourceChanges": false
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "Name": {
                  "Fn::Sub": "Build${AppName}"
                },
                "InputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CodeBuild"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "CodeBuildProject"
                  },
                  "EnvironmentVariables": {
                    "Fn::Sub": [
                      "[{\"name\":\"BUCKETTEMPLATES\",\"value\":\"${bucket}\",\"type\":\"PLAINTEXT\"}]",
                      {
                        "bucket": {
                          "Ref": "BucketCodePipelineArtifactStore"
                        }
                      }
                    ]
                  }
                },
                "RunOrder": 1,
                "OutputArtifacts": [
                  {
                    "Name": "projectsBuilded"
                  }
                ]
              }
            ]
          },
          {
            "Name": "Deploy",
            "Actions": [
              {
                "Name": "CreateChangeSet",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CloudFormation"
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "ChangeSetName": {
                    "Fn::Join": [
                      "-",
                      [
                        {
                          "Ref": "Environment"
                        },
                        {
                          "Ref": "AppName"
                        },
                        "changeSet"
                      ]
                    ]
                  },
                  "StackName": {
                    "Fn::Join": [
                      "-",
                      [
                        {
                          "Ref": "Environment"
                        },
                        {
                          "Ref": "AppName"
                        },
                        "stack"
                      ]
                    ]
                  },
                  "Capabilities": "CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "TemplatePath": {
                    "Fn::Join": [
                      "::",
                      [
                        "projectsBuilded",
                        {
                          "Ref": "PrincipalTemplate"
                        }
                      ]
                    ]
                  },
                  "RoleArn": {
                    "Fn::GetAtt": [
                      "RoleCloudFormation",
                      "Arn"
                    ]
                  },
                  "ParameterOverrides": {
                    "Ref": "ParametersTemplate"
                  }
                },
                "RunOrder": 1,
                "InputArtifacts": [
                  {
                    "Name": "projectsBuilded"
                  }
                ]
              },
              {
                "Name": "ChangesetExcecute",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": 1,
                  "Provider": "CloudFormation"
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": {
                    "Fn::Join": [
                      "-",
                      [
                        {
                          "Ref": "Environment"
                        },
                        {
                          "Ref": "AppName"
                        },
                        "changeSet"
                      ]
                    ]
                  },
                  "StackName": {
                    "Fn::Join": [
                      "-",
                      [
                        {
                          "Ref": "Environment"
                        },
                        {
                          "Ref": "AppName"
                        },
                        "stack"
                      ]
                    ]
                  }
                },
                "RunOrder": 2,
                "InputArtifacts": [
                  {
                    "Name": "projectsBuilded"
                  }
                ]
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Ref": "BucketCodePipelineArtifactStore"
          }
        }
      }
    },
    "RoleAmazonCloudWatchEvent": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Environment"
                  },
                  {
                    "Ref": "AppName"
                  },
                  "pipeline-execution"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "codepipeline:StartPipelineExecution",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codepipeline:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":",
                        {
                          "Ref": "AppPipeline"
                        }
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "RuleAmazonCloudWatchEvent": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.codecommit"
          ],
          "detail-type": [
            "CodeCommit Repository State Change"
          ],
          "resources": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:aws:codecommit:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "Repository"
                  }
                ]
              ]
            }
          ],
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated"
            ],
            "referenceType": [
              "branch"
            ],
            "referenceName": [
              {
                "Ref": "Branch"
              }
            ]
          }
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:codepipeline:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "AppPipeline"
                  }
                ]
              ]
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "RoleAmazonCloudWatchEvent",
                "Arn"
              ]
            },
            "Id": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Environment"
                  },
                  {
                    "Ref": "AppName"
                  },
                  "codepipeline-AppPipeline"
                ]
              ]
            }
          }
        ]
      }
    },
    "RoleCodePipeline": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Environment"
                  },
                  {
                    "Ref": "AppName"
                  },
                  "CodePipeline-Service-Role"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "codecommit:CancelUploadArchive",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetUploadArchiveStatus",
                    "codecommit:UploadArchive"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "codedeploy:CreateDeployment",
                    "codedeploy:GetApplicationRevision",
                    "codedeploy:GetDeployment",
                    "codedeploy:GetDeploymentConfig",
                    "codedeploy:RegisterApplicationRevision"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "codebuild:BatchGetBuilds",
                    "codebuild:StartBuild"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "devicefarm:ListProjects",
                    "devicefarm:ListDevicePools",
                    "devicefarm:GetRun",
                    "devicefarm:GetUpload",
                    "devicefarm:CreateUpload",
                    "devicefarm:ScheduleRun"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:ListFunctions"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticbeanstalk:*",
                    "ec2:*",
                    "elasticloadbalancing:*",
                    "autoscaling:*",
                    "cloudwatch:*",
                    "s3:*",
                    "sns:*",
                    "cloudformation:*",
                    "rds:*",
                    "sqs:*",
                    "ecs:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "BucketCodePipelineArtifactStore": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Environment"
              },
              {
                "Ref": "AppName"
              },
              "artifacts",
              {
                "Ref": "AWS::AccountId"
              }
            ]
          ]
        }
      }
    },
    "RoleCodeBuildProject": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${Environment}-${AppName}-CodeBuild-Role"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codebuild.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/service-role/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-CodeBuild-Policy"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:us-east-1:*:log-group:/aws/codebuild/*:*",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:s3:::codepipeline-us-east-1-*"
                  ],
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:ListBucket",
                    "s3:GetBucketAcl",
                    "s3:PutObjectAcl",
                    "s3:GetBucketLocation"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "codebuild:CreateReportGroup",
                    "codebuild:CreateReport",
                    "codebuild:UpdateReport",
                    "codebuild:BatchPutTestCases"
                  ],
                  "Resource": "arn:aws:codebuild:us-east-1:*:report-group/*-*"
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "CodeBuildProject": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Environment"
              },
              {
                "Ref": "AppName"
              },
              "Compile"
            ]
          ]
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "RoleCodeBuildProject",
            "Arn"
          ]
        },
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "EnvironmentVariables": [
            {
              "Name": "ENVIRONMENT",
              "Value": {
                "Ref": "Environment"
              }
            },
            {
              "Name": "BUCKET",
              "Value": {
                "Ref": "BucketCodePipelineArtifactStore"
              }
            }
          ]
        },
        "Source": {
          "Type": "CODEPIPELINE"
        },
        "TimeoutInMinutes": 60,
        "Tags": [
          {
            "Key": "Product",
            "Value": {
              "Ref": "AppName"
            }
          }
        ]
      }
    },
    "RoleCloudFormation": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "Environment"
              },
              {
                "Ref": "AppName"
              },
              "CloudFormation-Role"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "cloudformation.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Environment"
                  },
                  {
                    "Ref": "AppName"
                  },
                  "CloudFormation-Policy"
                ]
              ]
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "VisualEditor0",
                  "Effect": "Allow",
                  "Action": [
                    "organizations:ListPoliciesForTarget",
                    "organizations:ListRoots",
                    "organizations:ListTargetsForPolicy",
                    "apigateway:*",
                    "organizations:DescribeAccount",
                    "cloudformation:CreateChangeSet",
                    "s3:GetBucketVersioning",
                    "organizations:DescribePolicy",
                    "organizations:ListChildren",
                    "organizations:ListPolicies",
                    "iam:*",
                    "s3:GetObject",
                    "organizations:DescribeOrganization",
                    "codedeploy:*",
                    "lambda:*",
                    "organizations:DescribeOrganizationalUnit",
                    "organizations:ListParents",
                    "s3:GetObjectVersion",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "ec2:AcceptVpcPeeringConnection",
                    "ec2:AcceptVpcEndpointConnections",
                    "ec2:AllocateAddress",
                    "ec2:AssignIpv6Addresses",
                    "ec2:AssignPrivateIpAddresses",
                    "ec2:AssociateAddress",
                    "ec2:AssociateDhcpOptions",
                    "ec2:AssociateRouteTable",
                    "ec2:AssociateSubnetCidrBlock",
                    "ec2:AssociateVpcCidrBlock",
                    "ec2:AttachClassicLinkVpc",
                    "ec2:AttachInternetGateway",
                    "ec2:AttachNetworkInterface",
                    "ec2:AttachVpnGateway",
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateCustomerGateway",
                    "ec2:CreateDefaultSubnet",
                    "ec2:CreateDefaultVpc",
                    "ec2:CreateDhcpOptions",
                    "ec2:CreateEgressOnlyInternetGateway",
                    "ec2:CreateFlowLogs",
                    "ec2:CreateInternetGateway",
                    "ec2:CreateNatGateway",
                    "ec2:CreateNetworkAcl",
                    "ec2:CreateNetworkAcl",
                    "ec2:CreateNetworkAclEntry",
                    "ec2:CreateNetworkInterface",
                    "ec2:CreateNetworkInterfacePermission",
                    "ec2:CreateRoute",
                    "ec2:CreateRouteTable",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateSubnet",
                    "ec2:CreateTags",
                    "ec2:CreateVpc",
                    "ec2:CreateVpcEndpoint",
                    "ec2:CreateVpcEndpointConnectionNotification",
                    "ec2:CreateVpcEndpointServiceConfiguration",
                    "ec2:CreateVpcPeeringConnection",
                    "ec2:CreateVpnConnection",
                    "ec2:CreateVpnConnectionRoute",
                    "ec2:CreateVpnGateway",
                    "ec2:DeleteCustomerGateway",
                    "ec2:DeleteDhcpOptions",
                    "ec2:DeleteEgressOnlyInternetGateway",
                    "ec2:DeleteFlowLogs",
                    "ec2:DeleteInternetGateway",
                    "ec2:DeleteNatGateway",
                    "ec2:DeleteNetworkAcl",
                    "ec2:DeleteNetworkAclEntry",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DeleteNetworkInterfacePermission",
                    "ec2:DeleteRoute",
                    "ec2:DeleteRouteTable",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DeleteSubnet",
                    "ec2:DeleteTags",
                    "ec2:DeleteVpc",
                    "ec2:DeleteVpcEndpoints",
                    "ec2:DeleteVpcEndpointConnectionNotifications",
                    "ec2:DeleteVpcEndpointServiceConfigurations",
                    "ec2:DeleteVpcPeeringConnection",
                    "ec2:DeleteVpnConnection",
                    "ec2:DeleteVpnConnectionRoute",
                    "ec2:DeleteVpnGateway",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeAddresses",
                    "ec2:DescribeAvailabilityZones",
                    "ec2:DescribeClassicLinkInstances",
                    "ec2:DescribeCustomerGateways",
                    "ec2:DescribeDhcpOptions",
                    "ec2:DescribeEgressOnlyInternetGateways",
                    "ec2:DescribeFlowLogs",
                    "ec2:DescribeInstances",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeKeyPairs",
                    "ec2:DescribeMovingAddresses",
                    "ec2:DescribeNatGateways",
                    "ec2:DescribeNetworkAcls",
                    "ec2:DescribeNetworkInterfaceAttribute",
                    "ec2:DescribeNetworkInterfacePermissions",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribePrefixLists",
                    "ec2:DescribeRouteTables",
                    "ec2:DescribeSecurityGroupReferences",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeStaleSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeTags",
                    "ec2:DescribeVpcAttribute",
                    "ec2:DescribeVpcClassicLink",
                    "ec2:DescribeVpcClassicLinkDnsSupport",
                    "ec2:DescribeVpcEndpointConnectionNotifications",
                    "ec2:DescribeVpcEndpointConnections",
                    "ec2:DescribeVpcEndpoints",
                    "ec2:DescribeVpcEndpointServiceConfigurations",
                    "ec2:DescribeVpcEndpointServicePermissions",
                    "ec2:DescribeVpcEndpointServices",
                    "ec2:DescribeVpcPeeringConnections",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeVpnConnections",
                    "ec2:DescribeVpnGateways",
                    "ec2:DetachClassicLinkVpc",
                    "ec2:DetachInternetGateway",
                    "ec2:DetachNetworkInterface",
                    "ec2:DetachVpnGateway",
                    "ec2:DisableVgwRoutePropagation",
                    "ec2:DisableVpcClassicLink",
                    "ec2:DisableVpcClassicLinkDnsSupport",
                    "ec2:DisassociateAddress",
                    "ec2:DisassociateRouteTable",
                    "ec2:DisassociateSubnetCidrBlock",
                    "ec2:DisassociateVpcCidrBlock",
                    "ec2:EnableVgwRoutePropagation",
                    "ec2:EnableVpcClassicLink",
                    "ec2:EnableVpcClassicLinkDnsSupport",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:ModifySubnetAttribute",
                    "ec2:ModifyVpcAttribute",
                    "ec2:ModifyVpcEndpoint",
                    "ec2:ModifyVpcEndpointConnectionNotification",
                    "ec2:ModifyVpcEndpointServiceConfiguration",
                    "ec2:ModifyVpcEndpointServicePermissions",
                    "ec2:ModifyVpcPeeringConnectionOptions",
                    "ec2:ModifyVpcTenancy",
                    "ec2:MoveAddressToVpc",
                    "ec2:RejectVpcEndpointConnections",
                    "ec2:RejectVpcPeeringConnection",
                    "ec2:ReleaseAddress",
                    "ec2:ReplaceNetworkAclAssociation",
                    "ec2:ReplaceNetworkAclEntry",
                    "ec2:ReplaceRoute",
                    "ec2:ReplaceRouteTableAssociation",
                    "ec2:ResetNetworkInterfaceAttribute",
                    "ec2:RestoreAddressToClassic",
                    "ec2:RevokeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:UnassignIpv6Addresses",
                    "ec2:UnassignPrivateIpAddresses",
                    "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                    "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
                  ],
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "BucketArtifacts": {
      "Description": "A reference to the created S3 for artifacts.",
      "Value": {
        "Ref": "BucketCodePipelineArtifactStore"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${Environment}-${AWS::StackName}-artifacts"
        }
      }
    }
  }
}
