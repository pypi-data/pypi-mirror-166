[metadata]
name = pydatpiff
version = attr: pydatpiff.__version__
description = Unofficial Datpiff Mixtape player - Download and play the newest Hip-Hop and RnB Songs.
long_description = file: README.md
author = Cornelius Brooks
author_email = cbedroid1614@gmail.com
license = MIT
url = https://github.com/cbedroid/pydatpiff
classifiers = 
	License :: OSI Approved :: MIT License
	Development Status :: 5 - Production/Stable
	Intended Audience :: Developers
	Intended Audience :: End Users/Desktop
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Operating System :: OS Independent
	Topic :: Internet :: WWW/HTTP
	Topic :: Multimedia :: Sound/Audio :: Players
	Topic :: Software Development :: Libraries :: Python Modules

[options]
packages = find:
python_requires = >=3.7
include_package_data = True
install_requires = 
	requests >=2
	python-vlc >=3
	mutagen >=1.45.1
	bs4 >=0.0.1
	pyyaml >=6.0

[options.packages.find]
exclude = 
	tests
	tests.*
	pydatpiff/tests.*

[options.entry_points]
console_scripts = 
	pydatpiff = pydatpiff:main

[options.package_data]
* = 
	**.yaml
	**.json

[tox]
minversion = 2.3.1
envlist = py37,py38,py39,py3.10
skipdist = true

[tox:tox]

[testenv:format]
deps = black
commands = 
	black -t py37 -l 120 --exclude="^(.github/|tests/|setup.py)" pydatpiff setup.py

[testenv:pre-commit]
deps = 
	pre-commit
	black
	isort
	flake8
skip_install = true
commands = 
	pre-commit run --config .pre-commit-config.yaml --all-files --show-diff-on-failure

[testenv:flake8]
deps = flake8
max-line-length = 120
max-complexity = 18
select = [B,C,E,F,W,T4,B9]
ignore = 
	E203
	E266
	E501
	E722
	F403
	F405
	W503
	W605
exclude = 
	tests
	tests.*
	pydatpiff/tests.*
	setup.py

[testenv:isort]
deps = isort
line_length = 120
multi_line_output = 3
include_trailing_comma = True

[testenv:tests]
deps = 
	{[testenv:format]deps}
	{[testenv:pre-commit]deps}
	pytest
	coverage
	pytest-cov
commands = 
	{[testenv:format]commands}
	{[testenv:pre-commit]commands}
	coverage run --source='pydatpiff/' -m pytest
	coverage report -m --include='pydatpiff/*'
	coverage html --include='pydatpiff/*'

[testenv:pypi]
repository = https://upload.pypi.org/legacy/
username = __token__
password = TWINE_PASSWORD

[testenv:release]
deps = 
	wheel
commands = 
	python setup.py sdist bdist_wheel

[testenv:upload]
skip_install = True
deps = 
	twine
PASSENV = 
	TWINE_PASSWORD
commands = 
	twine upload -r pypi

[egg_info]
tag_build = 
tag_date = 0

