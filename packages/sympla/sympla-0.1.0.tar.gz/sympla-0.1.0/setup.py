# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['sympla']

package_data = \
{'': ['*']}

install_requires = \
['requests>=2.28.1,<3.0.0']

setup_kwargs = {
    'name': 'sympla',
    'version': '0.1.0',
    'description': 'A plataforma online de eventos líder no Brasil. Venda de ingressos, promoção e administração de eventos. Simples e segura. Organiza eventos? Sympla!',
    'long_description': '# Sympla\nA plataforma online de eventos líder no Brasil. Venda de ingressos, promoção e administração de eventos. Simples e segura. Organiza eventos? Sympla!\n\n![Python package](https://github.com/hudsonbrendon/sympla/workflows/Python%20package/badge.svg?branch=master)\n[![Github Issues](http://img.shields.io/github/issues/hudsonbrendon/sympla.svg?style=flat)](https://github.com/hudsonbrendon/sympla/issues?sort=updated&state=open)\n![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)\n\n![Sympla](https://logodownload.org/wp-content/uploads/2018/10/sympla-logo-3.png)\n\n# Recursos Disponíveis\n\n- [x]  Listar eventos\n- [x]  Listar evento por identificador\n- [x]  Listar pedidos por evento\n- [x]  Listar pedidos por identificador\n- [x]  Listar participantes por pedido\n- [x]  Listar participantes por evento\n- [x]  Listar participante por id do ingresso\n- [x]  Listar participante por número de ingresso\n- [x]  Check-in por id do ingresso\n- [x]  Check-in por número do ingresso\n- [x]  Listar afiliados por evento\n\n# Instalação\n\n```bash\n$ pip install sympla\n```\nou\n\n```bash\n$ python setup.py install\n```\n\n# Modo de usar\n\nA API da Sympla é a interface pública de acesso a dados da plataforma Sympla. Através dela é possível obter informações relacionadas aos eventos criados por você, como ingressos, pedidos e participantes.\n\nA API fornece endpoints com resultados representados em formato JSON, e os dados são disponibilizados em conformidade com o princípio REST de maneira segura, eficiente e de fácil integração. Para garantir a segurança de acesso somente a dados relacionados aos seus eventos, a API exige autenticação prévia.\n\nNeste documento você encontrará a referência técnica de como acessar todos os serviços disponíveis da API.\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#section/Introducao\n\n# Autenticação\n\nPara executar requisições válidas à Sympla API é necessário uma chave de acesso (token) associada ao seu usuário na plataforma. Este token deverá assinar todas as requisições enviadas à API.\n\nPara gerar a chave de acesso é preciso logar na plataforma Sympla, acessar o menu "Minha Conta" (a partir do nome do seu usuário) e navegar até a aba "Integrações".\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#section/Autenticacao\n\n# Listar eventos\n\nEsta API fornece acesso às informações de eventos criados na plataforma Sympla, exclusivamente aqueles vinculados ao usuário proprietário do token.\n\nA API também permite a personalização dos resultados, possibilitando filtrar eventos dentro de uma janela de data ou restringir quais campos são relevantes e devem ser exibidos no retorno, como apenas nome do evento e descrição.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#tag/Eventos\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nevents = sympla.events()\n```\n\n# Listar eventos por identificador\n\nRetorna o evento correspondente ao identificador informado.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/getEventId\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nevent = sympla.events(event_id=config("EVENT_ID"))\n```\n\n# Listar pedidos por evento\n\nRetorna os pedidos de um determinado evento.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/getListOrders\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\norders = sympla.orders_by_event(event_id=config("EVENT_ID"))\n```\n\n# Listar pedido por identificador\n\nRetorna o pedido correspondente ao identificador informado.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/getOneOrder\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\norder = sympla.order_by_identifier(event_id=config("EVENT_ID"), order_id=config("ORDER_ID"))\n```\n\n# Listar participantes por pedido\n\nRetorna o(s) participante(s) contido(s) em um determinado pedido.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/getAllParticipantsForOrder\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nparticipants = sympla.participants_by_order(event_id=config("EVENT_ID"), order_id=config("ORDER_ID"))\n```\n\n# Listar participantes por evento\n\nRetorna os participantes de um determinado evento.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#tag/Participantes\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nparticipants = sympla.participants_by_event(event_id=config("EVENT_ID"))\n```\n\n# Listar participante por id do ingresso\n\nRetorna o participante correspondente ao ingresso informado.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/getOneParticipant\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nparticipants = sympla.participant_by_ticket_id(event_id=config("EVENT_ID"), participant_id=config("PARTICIPANT_ID"))\n```\n\n# Listar participante por número de ingresso\n\nRetorna o participante correspondente ao ingresso informado.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/getOneParticipantByTicketNumber\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nparticipants = sympla.participant_by_ticket_number(event_id=config("EVENT_ID"), ticket_number=config("TICKET_NUMBER"))\n```\n\n# Check-in por id do ingresso\n\nRealiza o check-in de um participante por id do ingresso.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/checkInByParticipantId\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nparticipant = sympla.checkin_by_ticket_id(event_id=config("EVENT_ID"), participant_id=config("PARTICIPANT_ID"))\n```\n\n# Check-in por número do ingresso\n\nRealiza o check-in de um participante por número do ingresso.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#operation/checkInByTicketNumber\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\nparticipant = sympla.checkin_by_ticket_number(event_id=config("EVENT_ID"), ticket_number=config("TICKET_NUMBER"))\n```\n\n# Listar afiliados por evento\n\nRetorna os afiliados do evento correspondente ao identificador informado.\n\nSaiba mais em: https://developers.sympla.com.br/api-doc/index.html#tag/Afiliados\n\n```python\nfrom sympla import Sympla\nfrom decouple import config\n\n\nsympla = Sympla(token=config("TOKEN"))\n\naffiliates = sympla.affiliates(event_id=config("EVENT_ID"))\n```\n\n# Contribua\n\nClone o projeto repositório:\n\n```bash\n$ git clone https://github.com/hudsonbrendon/sympla.git\n```\n\nCertifique-se de que o [Pipenv](https://github.com/kennethreitz/pipenv) está instalado, caso contrário:\n\n```bash\n$ pip install -U pipenv\n```\n\nAcesse o repositório e instale as dependências:\n\n```bash\n$ make install\n```\n\nPara executar os testes:\n\n```bash\n$ make test\n```\n\n# Dependências\n\n- [Python 3.8+](https://www.python.org/downloads/release/python-374/)\n- [Pipenv](https://github.com/kennethreitz/pipenv)\n\n# Licença\n\n[MIT](http://en.wikipedia.org/wiki/MIT_License)\n',
    'author': 'Hudson Brendon',
    'author_email': 'contato.hudsonbrendon@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/hudsonbrendon/sympla#readme',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
