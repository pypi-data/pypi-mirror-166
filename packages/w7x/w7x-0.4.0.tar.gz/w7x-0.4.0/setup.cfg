[bumpversion]
current_version = 0.4.0
tag = True
commit = True
message = release-v{new_version}

[bumpversion:file:w7x/__init__.py]
search = __version__ = '{current_version}'
replace = {new_version}

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = {new_version}

[bumpversion:file:docs/cookiecutter_input.json]
search = 'package_version': '{current_version}'
replace = {new_version}

[metadata]
name = w7x
url = https://gitlab.mpcdf.mpg.de/dboe/w7x
author = Daniel BÃ¶ckenhoff
author_email = dboe@ipp.mpg.de
classifiers = 
	Development Status :: 3 - Alpha
	License :: OSI Approved :: MIT License
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
license = MIT License
license_files = LICENSE.rst
description = Wendelstein 7-X tools providing easy acces and error catching for field line tracer, VMEC and EXTENDER web services and much more.
long_description = file: README.rst, LICENSE.rst
long_description_content_type = text/x-rst
keywords = Wendelstein 7-X, field line diffusion, VMEC, EXTENDER
project_urls = 
	Documentation = https://w7x.readthedocs.io
	Source = https://gitlab.mpcdf.mpg.de/dboe/w7x

[options]
python_requires = >=3.0
packages = find:
install_requires = 
	pathlib;python_version<'3.10'
	osa
	scipy>=1.4.1  # symfit will want to have 1.1.0 but e.g. tensorflow needs 1.4.1 - also https://github.com/tBuLi/symfit/issues/277
	tfields>=0.4.0
	scikit-learn>0.0
	dask[complete]
	dill
	netCDF4
	requests
tests_require = 
	doctest
	unittest
	pytest

[options.package_data]
w7x = config.yaml

[options.packages.find]
exclude = 
	tests*

[options.extras_require]
all = 
	%(dev)s
dev = 
	%(docs)s
	%(test)s
	%(dot)s
	%(db)s
	%(ssh)s
	bump2version  # for incrementing the version
	twine  # for publishing
	sphinx  # for documentation
	pre-commit  # https://pre-commit.com/ for hook managment
	pre-commit-hooks
	cookiecutter-project-upgrader
docs = 
	sphinx>=2.2.0  # requires templatedir option in sphinx-apidoc
	sphinx_rtd_theme>=0.4.3
test = 
	flake8
	pytest
	pytest-cov
	coverage
	pytest-shutil
	pytest-virtualenv
	pytest-fixture-config
	pytest-xdist
dot = 
	graphviz
ssh = 
	paramiko
db = 
	sqlalchemy>=1.4.0b2
	sqlalchemy-migrate

[bdist_wheel]
universal = 1

[conda]
values = 
	pathlib
	dask
	sqlalchemy
	sqlalchemy-migrate
	scikit-learn, conda-forge
	scipy
	bumpversion
	twine
	sphinx
	pre-commit
	flake8
	pytest
	pytest-cov
	coverage
	pytest-shutil
	pytest-virtualenv
	pytest-fixture-config
	pytest-xdist
	doctest
	graphviz
	netCDF4
fallback = 
	osa
	transcoding
	rna>=0.7.11
	tfields>=0.3.8
	pre-commit-hooks
	cookiecutter-project-upgrader

[coverage:report]
show_missing = true
exclude_lines = 
	pragma: no cover
	if False

[coverage:run]
omit = 
	w7x/plotting/*.py

[flake8]
max-line-length = 99
doctests = True
exclude = .git, .eggs, __pycache__, docs, dist, venv, .tox
ignore = E203 W503 W504  # wrong flake defaults: see https://github.com/psf/black/issues/315, https://github.com/psf/black/issues/43
per-file-ignores = 
	__init__.py: F401
	w7x/simulation/backends/web_service/flt.py: E501,

[pylint.]
ignore = setup.py

[build_sphinx]
builder = html,man
all-files = 1
build-dir = docs/_build
source-dir = docs

[tool:pytest]
addopts = 
	--doctest-modules
	--ignore=performance
junit_family = xunit2

[tox:tox]
minversion = 3.7
skip_missing_interpreters = true
envlist = 
	py{37,38,39,310}
recreate = true

[gh-actions]
python = 
	3.7: py37
	3.8: py38
	3.9: py39
	3.10: py310

[testenv]
description = run test suite under {basepython}
deps = 
	{[options]install_requires}
	{[options.extras_require]test}
extras = test
commands = 
	pytest {envsitepackagesdir}/{[metadata]name} --basetemp="{envtmpdir}" {posargs} --cov={envsitepackagesdir}/{[metadata]name} --junitxml=report/junit.xml --ignore={envsitepackagesdir}/{[metadata]name}/plotting --ignore={envsitepackagesdir}/{[metadata]name}/simulation/backends/web_service --ignore={envsitepackagesdir}/{[metadata]name}/simulation/backends/mock/vmec.py --ignore={envsitepackagesdir}/{[metadata]name}/simulation/backends/runner/base.py

[testenv:flake8]
commands = flake8 {[metadata]name}/ tests/
extras = testing
description = run flake8 under {basepython}

[egg_info]
tag_build = 
tag_date = 0

