defaults: &defaults
    parallelism: 1
    shell: /bin/bash --login
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1-dep-
    - run:
        name: Version checks
        command: |
            VERSION=`fgrep '###' CHANGES.md  | awk '{print $2}' | head -1`
            echo picked up VERSION=$VERSION from CHANGES.md
            grep -q $VERSION CHANGES.md || (echo "ERROR: Version number not found in CHANGES.md: $VERSION"; exit 1)
    - run:
        name: Output useful stuff
        command: |
          echo $VERSION > "$CIRCLE_ARTIFACTS/version.txt"
          # Find the lines of the changelog between releases, escape double quotes, delete empty lines
          # Simply gets the current changes from top of changelog.
          #sed -n '{ /------/= }' CHANGES.md \
              #| head -n 2 \
              #| xargs -n 2 bash -c 'sed -n "s/\"/\\\\\"/g;`expr $0 + 1`,`expr $1 - 2`p" CHANGES.md' \
              #| sed '/^$/d' \
              #> "$CIRCLE_ARTIFACTS/changes.md"
    - run:
        name: Install MongoDB
        command: |
            # run "cat /etc/os-release" to view information about the OS
            # good article on how to install mongo, https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/
            cat /etc/os-release
            set -x
            wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
            sudo apt-get install gnupg
            wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
            echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list
            sudo apt-get update
            sudo ln -Tf /bin/true /usr/bin/systemctl
            sudo apt-get install -y mongodb-org=4.2.11 mongodb-org-server=4.2.11 mongodb-org-shell=4.2.11 mongodb-org-mongos=4.2.11 mongodb-org-tools=4.2.11
            sudo rm /usr/bin/systemctl
    - run:
       name: Create and activate virtualenv
       command: |
         virtualenv ci
         . ci/bin/activate
         python setup.py develop
         pip install pytest-server-fixtures[mongodb]
         pip freeze
         python --version
    - run:
       name: Check Markdown rendering
       command: |
         pip install --upgrade pip
         pip install readme_renderer
         echo CHANGES.md
         python -m readme_renderer CHANGES.md  -o c.html
         echo README.md
         python -m readme_renderer README.md  -o r.html
    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/ci
    #- run:
    #    name: Run Flake8
    #    command: |
    #      . ci/bin/activate
    #      flake8 notebooker tests
    #- run:
    #    name: Run black
    #    command: |
    #      . ci/bin/activate
    #      black --check -l 120 notebooker tests
    #      if [ $? -eq 0 ]
    #      then
    #        echo "Black worked fine."
    #      else
    #        echo "Black found differences!"; exit $?
    #      fi
    # Test
    - run:
        name: Run all tests
        command: |
         set -x
         . ci/bin/activate
         ls -la /bin | grep mongo
         which mongod
         #py.test -svvvvv --junitxml=test-results/junit.xml
         python setup.py test --pytest-args=-v
    - store_test_results:
        path: test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: test-results
    - persist_to_workspace:
        root: /tmp/circleci-artifacts
        paths:
          - ./*/version.txt
          - ./*/changes.md
          - ./*/dist/*
version: 2
jobs:
  build_3_6:
    environment:
      PYTHON_VERSION: "3_6"
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts/3_6
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results/3_6
      VERSION: $VERSION
      #PANDOC_RELEASES_URL: https://github.com/jgm/pandoc/releases
      #YARN_STATIC_DIR: notebooker/web/static/
      IMAGE_NAME: mangroup/arctic
    working_directory: ~/arctic_3_6
    docker:
    - image: cimg/python:3.6-node
    <<: *defaults
  build_3_7:
    environment:
      PYTHON_VERSION: "3_7"
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts/3_7
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results/3_7
      VERSION: $VERSION
      #PANDOC_RELEASES_URL: https://github.com/jgm/pandoc/releases
      #YARN_STATIC_DIR: notebooker/web/static/
      IMAGE_NAME: mangroup/arctic
    working_directory: ~/arctic_3_7
    docker:
    - image: cimg/python:3.7-node
    <<: *defaults
  build_3_8:
    environment:
      PYTHON_VERSION: "3_8"
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts/3_8
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results/3_8
      VERSION: $VERSION
      #PANDOC_RELEASES_URL: https://github.com/jgm/pandoc/releases
      #YARN_STATIC_DIR: notebooker/web/static/
      IMAGE_NAME: mangroup/arctic
    working_directory: ~/arctic_3_8
    docker:
    - image: cimg/python:3.8-node
    <<: *defaults
  publish-github-release:
   docker:
     - image: cibuilds/github:0.13
   steps:
     - attach_workspace:
         at: /tmp/circleci-artifacts
     - run:
         name: "Publish release on GitHub"
         command: |
           VERSION=$(cat /tmp/circleci-artifacts/3_6/version.txt)
           CHANGES=$(cat /tmp/circleci-artifacts/3_6/changes.md)
           ghr -t ${GITHUB_TOKEN} \
               -u ${CIRCLE_PROJECT_USERNAME} \
               -r ${CIRCLE_PROJECT_REPONAME} \
               -c ${CIRCLE_SHA1} \
               -n ${VERSION} \
               -b "${CHANGES}" \
               -soft \
               ${VERSION} /tmp/circleci-artifacts/3_6/dist
workflows:
  version: 2
  build_all:
    jobs:
      - build_3_6
      - build_3_7
      - build_3_8

      # do not publish
      #- publish-github-release:
      #    requires:
      #      - build_3_6
      #      - build_3_7
      #    filters:
      #      branches:
      #        only:
      #          - master
