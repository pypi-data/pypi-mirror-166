# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/mltreelib',
                'doc_host': 'https://jkapila.github.io',
                'git_url': 'https://github.com/jkapila/mltreelib',
                'lib_path': 'mltreelib'},
  'syms': { 'mltreelib.basetree': { 'mltreelib.basetree.BaseDecisionTree': ( '01_APIS/basetree.html#basedecisiontree',
                                                                             'mltreelib/basetree.py'),
                                    'mltreelib.basetree.BaseDecisionTree.__init__': ( '01_APIS/basetree.html#__init__',
                                                                                      'mltreelib/basetree.py'),
                                    'mltreelib.basetree.BaseDecisionTree._build_tree': ( '01_APIS/basetree.html#_build_tree',
                                                                                         'mltreelib/basetree.py'),
                                    'mltreelib.basetree.BaseDecisionTree.fit': ('01_APIS/basetree.html#fit', 'mltreelib/basetree.py'),
                                    'mltreelib.basetree.BaseDecisionTree.predict': ( '01_APIS/basetree.html#predict',
                                                                                     'mltreelib/basetree.py'),
                                    'mltreelib.basetree.BaseDecisionTree.predict_value': ( '01_APIS/basetree.html#predict_value',
                                                                                           'mltreelib/basetree.py'),
                                    'mltreelib.basetree.BaseDecisionTree.print_tree': ( '01_APIS/basetree.html#print_tree',
                                                                                        'mltreelib/basetree.py'),
                                    'mltreelib.basetree.DecisionNode': ('01_APIS/basetree.html#decisionnode', 'mltreelib/basetree.py'),
                                    'mltreelib.basetree.DecisionNode.__init__': ('01_APIS/basetree.html#__init__', 'mltreelib/basetree.py'),
                                    'mltreelib.basetree.DecisionNode.estimate': ( '01_APIS/basetree.html#estimate',
                                                                                  'mltreelib/basetree.py')},
            'mltreelib.core': {'mltreelib.core.foo': ('00_Examples/core.html#foo', 'mltreelib/core.py')},
            'mltreelib.data': { 'mltreelib.data.Dataset': ('01_APIS/data.html#dataset', 'mltreelib/data.py'),
                                'mltreelib.data.Dataset.__init__': ('01_APIS/data.html#__init__', 'mltreelib/data.py'),
                                'mltreelib.data.Dataset.__str__': ('01_APIS/data.html#__str__', 'mltreelib/data.py'),
                                'mltreelib.data.Dataset._process_data': ('01_APIS/data.html#_process_data', 'mltreelib/data.py'),
                                'mltreelib.data.Dataset._reduce_size': ('01_APIS/data.html#_reduce_size', 'mltreelib/data.py'),
                                'mltreelib.data.Dataset.dtypes': ('01_APIS/data.html#dtypes', 'mltreelib/data.py'),
                                'mltreelib.data.Dataset.shape': ('01_APIS/data.html#shape', 'mltreelib/data.py')},
            'mltreelib.tree': { 'mltreelib.tree.CARTRegressionTree': ('01_APIS/trees.html#cartregressiontree', 'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._calculate_variance_reduction': ( '01_APIS/trees.html#_calculate_variance_reduction',
                                                                                                     'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._cart_leaf_function': ( '01_APIS/trees.html#_cart_leaf_function',
                                                                                           'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._cart_node_function': ( '01_APIS/trees.html#_cart_node_function',
                                                                                           'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree._mean_of_y': ('01_APIS/trees.html#_mean_of_y', 'mltreelib/tree.py'),
                                'mltreelib.tree.CARTRegressionTree.fit': ('01_APIS/trees.html#fit', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree': ('01_APIS/trees.html#tree', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.__init__': ('01_APIS/trees.html#__init__', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.apply': ('01_APIS/trees.html#apply', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.describe': ('01_APIS/trees.html#describe', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.fit': ('01_APIS/trees.html#fit', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.fit_dataset': ('01_APIS/trees.html#fit_dataset', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.fit_formula': ('01_APIS/trees.html#fit_formula', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.load': ('01_APIS/trees.html#load', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.predict': ('01_APIS/trees.html#predict', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.predict_leaf': ('01_APIS/trees.html#predict_leaf', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.predict_proba': ('01_APIS/trees.html#predict_proba', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.prune': ('01_APIS/trees.html#prune', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.save': ('01_APIS/trees.html#save', 'mltreelib/tree.py'),
                                'mltreelib.tree.Tree.transform': ('01_APIS/trees.html#transform', 'mltreelib/tree.py')},
            'mltreelib.utils': { 'mltreelib.utils.accuracy_score': ('01_APIS/utils.html#accuracy_score', 'mltreelib/utils.py'),
                                 'mltreelib.utils.calculate_correlation_matrix': ( '01_APIS/utils.html#calculate_correlation_matrix',
                                                                                   'mltreelib/utils.py'),
                                 'mltreelib.utils.calculate_covariance_matrix': ( '01_APIS/utils.html#calculate_covariance_matrix',
                                                                                  'mltreelib/utils.py'),
                                 'mltreelib.utils.calculate_entropy': ('01_APIS/utils.html#calculate_entropy', 'mltreelib/utils.py'),
                                 'mltreelib.utils.calculate_std_dev': ('01_APIS/utils.html#calculate_std_dev', 'mltreelib/utils.py'),
                                 'mltreelib.utils.calculate_variance': ('01_APIS/utils.html#calculate_variance', 'mltreelib/utils.py'),
                                 'mltreelib.utils.divide_on_feature': ('01_APIS/utils.html#divide_on_feature', 'mltreelib/utils.py'),
                                 'mltreelib.utils.euclidean_distance': ('01_APIS/utils.html#euclidean_distance', 'mltreelib/utils.py'),
                                 'mltreelib.utils.get_sorted_cats': ('01_APIS/utils.html#get_sorted_cats', 'mltreelib/utils.py'),
                                 'mltreelib.utils.linear_kernel': ('01_APIS/utils.html#linear_kernel', 'mltreelib/utils.py'),
                                 'mltreelib.utils.mean_squared_error': ('01_APIS/utils.html#mean_squared_error', 'mltreelib/utils.py'),
                                 'mltreelib.utils.polynomial_kernel': ('01_APIS/utils.html#polynomial_kernel', 'mltreelib/utils.py'),
                                 'mltreelib.utils.rbf_kernel': ('01_APIS/utils.html#rbf_kernel', 'mltreelib/utils.py')}}}