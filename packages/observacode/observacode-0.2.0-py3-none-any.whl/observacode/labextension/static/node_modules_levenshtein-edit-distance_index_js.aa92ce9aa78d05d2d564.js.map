{"version":3,"file":"node_modules_levenshtein-edit-distance_index_js.aa92ce9aa78d05d2d564.js","mappings":";;;;;;;;;;;;;AAAA,WAAW,gBAAgB;AAC3B;AACA,WAAW,gBAAgB;AAC3B;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACO;AACP,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","sources":["webpack://observacode/./node_modules/levenshtein-edit-distance/index.js"],"sourcesContent":["/** @type {Array.<number>} */\nvar codes = []\n/** @type {Array.<number>} */\nvar cache = []\n\n/**\n * @param {string} value\n * @param {string} other\n * @param {boolean} [insensitive]\n * @returns {number}\n */\nexport function levenshteinEditDistance(value, other, insensitive) {\n  /** @type {number} */\n  var code\n  /** @type {number} */\n  var result\n  /** @type {number} */\n  var distance\n  /** @type {number} */\n  var distanceOther\n  /** @type {number} */\n  var index\n  /** @type {number} */\n  var indexOther\n\n  if (value === other) {\n    return 0\n  }\n\n  if (value.length === 0) {\n    return other.length\n  }\n\n  if (other.length === 0) {\n    return value.length\n  }\n\n  if (insensitive) {\n    value = value.toLowerCase()\n    other = other.toLowerCase()\n  }\n\n  index = 0\n\n  while (index < value.length) {\n    codes[index] = value.charCodeAt(index)\n    cache[index] = ++index\n  }\n\n  indexOther = 0\n\n  while (indexOther < other.length) {\n    code = other.charCodeAt(indexOther)\n    result = distance = indexOther++\n    index = -1\n\n    while (++index < value.length) {\n      distanceOther = code === codes[index] ? distance : distance + 1\n      distance = cache[index]\n      cache[index] = result =\n        distance > result\n          ? distanceOther > result\n            ? result + 1\n            : distanceOther\n          : distanceOther > distance\n          ? distance + 1\n          : distanceOther\n    }\n  }\n\n  return result\n}\n"],"names":[],"sourceRoot":""}