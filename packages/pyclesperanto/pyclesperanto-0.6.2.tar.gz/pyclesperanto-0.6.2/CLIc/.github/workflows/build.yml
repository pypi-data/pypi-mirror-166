name: CI-Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.cxx }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        name: [ubuntu-gcc, ubuntu-clang, macos-clang, windows-msvc]
        buildtype: [debug, release]
        include:
          - name: windows-msvc
            os: windows-latest
            cxx: cl.exe
            cc: cl.exe
            triplet: x64-windows
          - name: ubuntu-gcc
            os: ubuntu-latest
            cxx: g++
            cc: gcc
            triplet: x64-linux
          - name: ubuntu-clang
            os: ubuntu-latest
            cxx: clang++
            cc: clang
            triplet: x64-linux
          - name: macos-clang
            os: macos-latest
            cxx: clang++
            cc: clang
            triplet: x64-osx

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg
        uses: lukka/run-vcpkg@v10.1
        with:
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgGitCommitId: cdd51899f6ae3736bfbe936f9e387f86d4a63a58 #ec6fe06e8da05a8157dc8581fa96b36b571c1bd5 vcpkgCommitId: '5568f110b509a9fd90711978a7cb76bae75bb092'
          vcpkgJsonGlob: "**/vcpkg.json"

      - name: Cmake [vcpkg]
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          configurePreset: ninja-multi-vcpkg
          buildPreset: "${{ matrix.buildtype }}-ninja-multi-vcpkg"
          
