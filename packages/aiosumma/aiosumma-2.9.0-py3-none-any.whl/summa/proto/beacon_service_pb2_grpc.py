# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from summa.proto import beacon_service_pb2 as summa_dot_proto_dot_beacon__service__pb2


class BeaconApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.attach_index = channel.unary_unary(
                '/summa.proto.BeaconApi/attach_index',
                request_serializer=summa_dot_proto_dot_beacon__service__pb2.AttachIndexRequest.SerializeToString,
                response_deserializer=summa_dot_proto_dot_beacon__service__pb2.AttachIndexResponse.FromString,
                )
        self.get_index_token = channel.unary_unary(
                '/summa.proto.BeaconApi/get_index_token',
                request_serializer=summa_dot_proto_dot_beacon__service__pb2.GetIndexTokenRequest.SerializeToString,
                response_deserializer=summa_dot_proto_dot_beacon__service__pb2.GetIndexTokenResponse.FromString,
                )


class BeaconApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def attach_index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_index_token(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BeaconApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'attach_index': grpc.unary_unary_rpc_method_handler(
                    servicer.attach_index,
                    request_deserializer=summa_dot_proto_dot_beacon__service__pb2.AttachIndexRequest.FromString,
                    response_serializer=summa_dot_proto_dot_beacon__service__pb2.AttachIndexResponse.SerializeToString,
            ),
            'get_index_token': grpc.unary_unary_rpc_method_handler(
                    servicer.get_index_token,
                    request_deserializer=summa_dot_proto_dot_beacon__service__pb2.GetIndexTokenRequest.FromString,
                    response_serializer=summa_dot_proto_dot_beacon__service__pb2.GetIndexTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'summa.proto.BeaconApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BeaconApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def attach_index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/summa.proto.BeaconApi/attach_index',
            summa_dot_proto_dot_beacon__service__pb2.AttachIndexRequest.SerializeToString,
            summa_dot_proto_dot_beacon__service__pb2.AttachIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_index_token(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/summa.proto.BeaconApi/get_index_token',
            summa_dot_proto_dot_beacon__service__pb2.GetIndexTokenRequest.SerializeToString,
            summa_dot_proto_dot_beacon__service__pb2.GetIndexTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
