
# You can use substitutions

fragment1: |
    program Empty
    end program Empty

# Or you can use YAML anchors and aliases to emulate variables

code2: &fragment2 |
    program HelloWorld
        write (*,*) 'Hello, world!'
    end program HelloWorld

tasks:
    hello:
        features : fcprogram
        source   : src/hello.f90

    sharedlib:
        features : fcshlib
        source   : src/funcs.f90
        ver-num  : '2.1.3'

    staticlib:
        features : fcstlib
        source   : src/funcs2.f90

    test:
        features : fcprogram
        source   : src/calculator.f90 src/main.f90
        includes : src/inc
        use      : staticlib sharedlib

configure:
  - do: parallel
    for: { task: test }
    actions:
      - do: check-code
        text: $fragment1
        label: fragment1
      - do: check-code
        text: *fragment2
        label: fragment2
        execute: true

buildtypes:
    release:
        #toolchain: auto-fc
        #toolchain: gfortran

        fcflags.select:
            windows and ifort: /O2
            default: -O2

        rpath : '.'

toolchains:
    gfortran:
        FCFLAGS: -Wall -W

    ifort:
        FCFLAGS: -warn

