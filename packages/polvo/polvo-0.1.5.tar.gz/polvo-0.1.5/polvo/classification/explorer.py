# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/02a_classification.explorer.ipynb.

# %% auto 0
__all__ = ['show_tfms', 'DataExplorer']

# %% ../../nbs/02a_classification.explorer.ipynb 3
#TODO: optimize imports
import polvo
from fastai.vision.all import *

# %% ../../nbs/02a_classification.explorer.ipynb 12
class DataExplorer:
    def __init__(self, x_tl, y_tl):
        self.x_tl = x_tl
        self.y_tl = y_tl
        
        self.id2label = y_tl.vocab
        self.label2id = {label: i for i, label in enumerate(self.id2label)}

        self.grouped_y = self._group_y()
        
    def _group_y(self):
        label_df = pd.DataFrame(self.y_tl, columns=["label_id"])
        label_df['label'] = label_df['label_id'].map(self.id2label.__getitem__)
        label_df["item_idx"] = label_df.index
        
        label_df = label_df.groupby("label_id").agg({"label": "first", "item_idx": list}).reset_index()
        label_df["n_samples"] = label_df.item_idx.str.len()
        label_df = label_df.sort_values("n_samples", ascending=False).reset_index(drop=True)
        return label_df

    def most_common(self):
        "Return a dataframe ordered by most common classes."
        return self.grouped_y.copy()

    def show_label_id(self, id, slice_=slice(None)):
        # TODO: can we also pick the class name to show?
        idx = self.grouped_y[self.grouped_y["label_id"] == id].index[0]
        return self.show_most_common(idx=idx, slice_=slice_)
    
    def show_label(self, label, slice_=slice(None)):
        return self.show_label_id(self.label2id[label], slice_=slice_)

    def show_most_common(self, idx: int, slice_=slice(None)):
        item_idxs = self.grouped_y.iloc[idx].item_idx
        item_idxs = item_idxs[slice_]
        
        images = [self.x_tl[i] for i in item_idxs]
        shows = [image.show for image in images]
        xmax, ymax = np.max([image.size for image in images], axis=0)
        
        return polvo.image_grid(shows, xmax=xmax, ymax=ymax)
    
    @classmethod
    def from_datasets(cls, dss):
        return cls(dss.tls[0], dss.tls[1])

# %% ../../nbs/02a_classification.explorer.ipynb 18
show_tfms = polvo.show_tfms
