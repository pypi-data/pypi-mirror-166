[tool.poetry]
name = "dbt_dynamic_models"
version = "0.1.3"
description = "Generate dbt models from config"
authors = ["Doug Guthrie <douglas.p.guthrie@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
typer = {extras = ["all"], version = "^0.6.1"}
PyYAML = "^6.0"
dbt-snowflake = {version = "^1.0.0", optional = true}
dbt-bigquery = {version = "^1.0.0", optional = true}
dbt-redshift = {version = "^1.0.0", optional = true}
dbt-postgres = {version = "^1.0.0", optional = true}
dbt-databricks = {version = "^1.0.0", optional = true}
dbt-spark = {version = "^1.0.0", optional = true}

[tool.poetry.dev-dependencies]
black = "^22.6.0"
pre-commit = "^2.20.0"
isort = "^5.10.1"
mypy = "^0.971"
flake8 = "^4.0.1"
pytest = "^7.1.2"
ipython = "^8.4.0"
coverage = "^6.4.2"
pytest-cov = "^3.0.0"

[tool.poetry.scripts]
dbtgen = "dbt_dynamic_models.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
snowflake = ["dbt-snowflake"]
bigquery = ["dbt-bigquery"]
redshift = ["dbt-redshift"]
postgres = ["dbt-postgres"]
databricks = ["dbt-databricks"]
spark = ["dbt-spark"]
