# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frequenz/api/microgrid/meter.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from frequenz.api.microgrid import common_pb2 as frequenz_dot_api_dot_microgrid_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"frequenz/api/microgrid/meter.proto\x12\x1c\x66requenz.api.microgrid.meter\x1a#frequenz/api/microgrid/common.proto\"N\n\x05State\x12\x45\n\x0f\x63omponent_state\x18\x01 \x01(\x0e\x32,.frequenz.api.microgrid.meter.ComponentState\"\x85\x01\n\x05\x45rror\x12\x35\n\x04\x63ode\x18\x01 \x01(\x0e\x32\'.frequenz.api.microgrid.meter.ErrorCode\x12\x38\n\x05level\x18\x02 \x01(\x0e\x32).frequenz.api.microgrid.common.ErrorLevel\x12\x0b\n\x03msg\x18\x03 \x01(\t\"5\n\x04\x44\x61ta\x12-\n\x02\x61\x63\x18\x01 \x01(\x0b\x32!.frequenz.api.microgrid.common.AC\"\"\n\nProperties\x12\x14\n\x0c\x66irmware_ver\x18\x01 \x01(\t\"\xe0\x01\n\x05Meter\x12<\n\nproperties\x18\x01 \x01(\x0b\x32(.frequenz.api.microgrid.meter.Properties\x12\x32\n\x05state\x18\x02 \x01(\x0b\x32#.frequenz.api.microgrid.meter.State\x12\x33\n\x06\x65rrors\x18\x03 \x03(\x0b\x32#.frequenz.api.microgrid.meter.Error\x12\x30\n\x04\x64\x61ta\x18\x04 \x01(\x0b\x32\".frequenz.api.microgrid.meter.Data*m\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\x13\n\x0fTYPE_PRODUCTION\x10\x01\x12\x14\n\x10TYPE_CONSUMPTION\x10\x02\x12\x10\n\x0cTYPE_FEED_IN\x10\x03\x12\x12\n\x0eTYPE_PURCHASED\x10\x04*d\n\x0e\x43omponentState\x12\x1f\n\x1b\x43OMPONENT_STATE_UNSPECIFIED\x10\x00\x12\x16\n\x12\x43OMPONENT_STATE_OK\x10\x01\x12\x19\n\x15\x43OMPONENT_STATE_ERROR\x10\x02*\'\n\tErrorCode\x12\x1a\n\x16\x45RROR_CODE_UNSPECIFIED\x10\x00\x62\x06proto3')

_TYPE = DESCRIPTOR.enum_types_by_name['Type']
Type = enum_type_wrapper.EnumTypeWrapper(_TYPE)
_COMPONENTSTATE = DESCRIPTOR.enum_types_by_name['ComponentState']
ComponentState = enum_type_wrapper.EnumTypeWrapper(_COMPONENTSTATE)
_ERRORCODE = DESCRIPTOR.enum_types_by_name['ErrorCode']
ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
TYPE_UNSPECIFIED = 0
TYPE_PRODUCTION = 1
TYPE_CONSUMPTION = 2
TYPE_FEED_IN = 3
TYPE_PURCHASED = 4
COMPONENT_STATE_UNSPECIFIED = 0
COMPONENT_STATE_OK = 1
COMPONENT_STATE_ERROR = 2
ERROR_CODE_UNSPECIFIED = 0


_STATE = DESCRIPTOR.message_types_by_name['State']
_ERROR = DESCRIPTOR.message_types_by_name['Error']
_DATA = DESCRIPTOR.message_types_by_name['Data']
_PROPERTIES = DESCRIPTOR.message_types_by_name['Properties']
_METER = DESCRIPTOR.message_types_by_name['Meter']
State = _reflection.GeneratedProtocolMessageType('State', (_message.Message,), {
  'DESCRIPTOR' : _STATE,
  '__module__' : 'frequenz.api.microgrid.meter_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.meter.State)
  })
_sym_db.RegisterMessage(State)

Error = _reflection.GeneratedProtocolMessageType('Error', (_message.Message,), {
  'DESCRIPTOR' : _ERROR,
  '__module__' : 'frequenz.api.microgrid.meter_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.meter.Error)
  })
_sym_db.RegisterMessage(Error)

Data = _reflection.GeneratedProtocolMessageType('Data', (_message.Message,), {
  'DESCRIPTOR' : _DATA,
  '__module__' : 'frequenz.api.microgrid.meter_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.meter.Data)
  })
_sym_db.RegisterMessage(Data)

Properties = _reflection.GeneratedProtocolMessageType('Properties', (_message.Message,), {
  'DESCRIPTOR' : _PROPERTIES,
  '__module__' : 'frequenz.api.microgrid.meter_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.meter.Properties)
  })
_sym_db.RegisterMessage(Properties)

Meter = _reflection.GeneratedProtocolMessageType('Meter', (_message.Message,), {
  'DESCRIPTOR' : _METER,
  '__module__' : 'frequenz.api.microgrid.meter_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.meter.Meter)
  })
_sym_db.RegisterMessage(Meter)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TYPE._serialized_start=639
  _TYPE._serialized_end=748
  _COMPONENTSTATE._serialized_start=750
  _COMPONENTSTATE._serialized_end=850
  _ERRORCODE._serialized_start=852
  _ERRORCODE._serialized_end=891
  _STATE._serialized_start=105
  _STATE._serialized_end=183
  _ERROR._serialized_start=186
  _ERROR._serialized_end=319
  _DATA._serialized_start=321
  _DATA._serialized_end=374
  _PROPERTIES._serialized_start=376
  _PROPERTIES._serialized_end=410
  _METER._serialized_start=413
  _METER._serialized_end=637
# @@protoc_insertion_point(module_scope)
