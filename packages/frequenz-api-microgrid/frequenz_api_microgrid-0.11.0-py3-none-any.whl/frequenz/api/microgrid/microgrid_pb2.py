# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frequenz/api/microgrid/microgrid.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from frequenz.api.microgrid import battery_pb2 as frequenz_dot_api_dot_microgrid_dot_battery__pb2
from frequenz.api.microgrid import common_pb2 as frequenz_dot_api_dot_microgrid_dot_common__pb2
from frequenz.api.microgrid import ev_charger_pb2 as frequenz_dot_api_dot_microgrid_dot_ev__charger__pb2
from frequenz.api.microgrid import inverter_pb2 as frequenz_dot_api_dot_microgrid_dot_inverter__pb2
from frequenz.api.microgrid import meter_pb2 as frequenz_dot_api_dot_microgrid_dot_meter__pb2
from frequenz.api.microgrid import sensor_pb2 as frequenz_dot_api_dot_microgrid_dot_sensor__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&frequenz/api/microgrid/microgrid.proto\x12\x16\x66requenz.api.microgrid\x1a$frequenz/api/microgrid/battery.proto\x1a#frequenz/api/microgrid/common.proto\x1a\'frequenz/api/microgrid/ev_charger.proto\x1a%frequenz/api/microgrid/inverter.proto\x1a\"frequenz/api/microgrid/meter.proto\x1a#frequenz/api/microgrid/sensor.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"]\n\x0f\x43omponentFilter\x12\x0b\n\x03ids\x18\x01 \x03(\x04\x12=\n\ncategories\x18\x02 \x03(\x0e\x32).frequenz.api.microgrid.ComponentCategory\"\x1e\n\x10\x43omponentIdParam\x12\n\n\x02id\x18\x01 \x01(\x04\"0\n\x10\x43onnectionFilter\x12\x0e\n\x06starts\x18\x01 \x03(\x04\x12\x0c\n\x04\x65nds\x18\x02 \x03(\x04\"8\n\x0fPowerLevelParam\x12\x14\n\x0c\x63omponent_id\x18\x01 \x01(\x04\x12\x0f\n\x07power_w\x18\x02 \x01(\x04\"\xf8\x01\n\x0eSetBoundsParam\x12\x14\n\x0c\x63omponent_id\x18\x01 \x01(\x04\x12J\n\rtarget_metric\x18\x02 \x01(\x0e\x32\x33.frequenz.api.microgrid.SetBoundsParam.TargetMetric\x12\x35\n\x06\x62ounds\x18\x03 \x01(\x0b\x32%.frequenz.api.microgrid.common.Bounds\"M\n\x0cTargetMetric\x12\x1d\n\x19TARGET_METRIC_UNSPECIFIED\x10\x00\x12\x1e\n\x1aTARGET_METRIC_POWER_ACTIVE\x10\x01\"\xb3\x03\n\tComponent\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0c\n\x04name\x18\x02 \x01(\t\x12;\n\x08\x63\x61tegory\x18\x03 \x01(\x0e\x32).frequenz.api.microgrid.ComponentCategory\x12\x14\n\x0cmanufacturer\x18\x04 \x01(\t\x12\x12\n\nmodel_name\x18\x05 \x01(\t\x12\x37\n\x07\x62\x61ttery\x18\x06 \x01(\x0e\x32$.frequenz.api.microgrid.battery.TypeH\x00\x12\x39\n\x08inverter\x18\x07 \x01(\x0e\x32%.frequenz.api.microgrid.inverter.TypeH\x00\x12\x33\n\x05meter\x18\x08 \x01(\x0e\x32\".frequenz.api.microgrid.meter.TypeH\x00\x12=\n\nev_charger\x18\t \x01(\x0e\x32\'.frequenz.api.microgrid.ev_charger.TypeH\x00\x12\x35\n\x06sensor\x18\n \x01(\x0e\x32#.frequenz.api.microgrid.sensor.TypeH\x00\x42\x06\n\x04type\"F\n\rComponentList\x12\x35\n\ncomponents\x18\x01 \x03(\x0b\x32!.frequenz.api.microgrid.Component\"\xf9\x02\n\rComponentData\x12&\n\x02ts\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\n\n\x02id\x18\x02 \x01(\x04\x12\x34\n\x05meter\x18\x03 \x01(\x0b\x32#.frequenz.api.microgrid.meter.MeterH\x00\x12=\n\x08inverter\x18\x04 \x01(\x0b\x32).frequenz.api.microgrid.inverter.InverterH\x00\x12:\n\x07\x62\x61ttery\x18\x05 \x01(\x0b\x32\'.frequenz.api.microgrid.battery.BatteryH\x00\x12\x42\n\nev_charger\x18\x06 \x01(\x0b\x32,.frequenz.api.microgrid.ev_charger.EVChargerH\x00\x12\x37\n\x06sensor\x18\x07 \x01(\x0b\x32%.frequenz.api.microgrid.sensor.SensorH\x00\x42\x06\n\x04\x64\x61ta\"(\n\nConnection\x12\r\n\x05start\x18\x01 \x01(\x04\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x04\"I\n\x0e\x43onnectionList\x12\x37\n\x0b\x63onnections\x18\x01 \x03(\x0b\x32\".frequenz.api.microgrid.Connection*\xbb\x03\n\x11\x43omponentCategory\x12\"\n\x1e\x43OMPONENT_CATEGORY_UNSPECIFIED\x10\x00\x12\x1b\n\x17\x43OMPONENT_CATEGORY_GRID\x10\x01\x12\x1c\n\x18\x43OMPONENT_CATEGORY_METER\x10\x02\x12\x1f\n\x1b\x43OMPONENT_CATEGORY_INVERTER\x10\x03\x12 \n\x1c\x43OMPONENT_CATEGORY_CONVERTER\x10\x04\x12\x1e\n\x1a\x43OMPONENT_CATEGORY_BATTERY\x10\x05\x12!\n\x1d\x43OMPONENT_CATEGORY_EV_CHARGER\x10\x06\x12\x1d\n\x19\x43OMPONENT_CATEGORY_SENSOR\x10\x07\x12#\n\x1f\x43OMPONENT_CATEGORY_CRYPTO_MINER\x10\x08\x12#\n\x1f\x43OMPONENT_CATEGORY_ELECTROLYZER\x10\t\x12\x1a\n\x16\x43OMPONENT_CATEGORY_CHP\x10\n\x12\x1b\n\x17\x43OMPONENT_CATEGORY_LOAD\x10\x0e\x12\x1f\n\x1b\x43OMPONENT_CATEGORY_JUNCTION\x10\x0f\x32\xa8\x0b\n\tMicrogrid\x12x\n\x0eListComponents\x12\'.frequenz.api.microgrid.ComponentFilter\x1a%.frequenz.api.microgrid.ComponentList\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/components\x12|\n\x0fListConnections\x12(.frequenz.api.microgrid.ConnectionFilter\x1a&.frequenz.api.microgrid.ConnectionList\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/connections\x12\x87\x01\n\x10GetComponentData\x12(.frequenz.api.microgrid.ComponentIdParam\x1a%.frequenz.api.microgrid.ComponentData\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v1/components/{id}/data0\x01\x12|\n\rCanStreamData\x12(.frequenz.api.microgrid.ComponentIdParam\x1a\x1a.google.protobuf.BoolValue\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v1/components/{id}/canStream\x12M\n\tSetBounds\x12&.frequenz.api.microgrid.SetBoundsParam\x1a\x16.google.protobuf.Empty(\x01\x12\x81\x01\n\x06\x43harge\x12\'.frequenz.api.microgrid.PowerLevelParam\x1a\x16.google.protobuf.Empty\"6\x82\xd3\xe4\x93\x02\x30\x12./v1/components/{component_id}/charge/{power_w}\x12\x87\x01\n\tDischarge\x12\'.frequenz.api.microgrid.PowerLevelParam\x1a\x16.google.protobuf.Empty\"9\x82\xd3\xe4\x93\x02\x33\x12\x31/v1/components/{component_id}/discharge/{power_w}\x12l\n\x05Start\x12(.frequenz.api.microgrid.ComponentIdParam\x1a\x16.google.protobuf.Empty\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/components/{id}/start\x12v\n\nHotStandby\x12(.frequenz.api.microgrid.ComponentIdParam\x1a\x16.google.protobuf.Empty\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1/components/{id}/hotStandby\x12x\n\x0b\x43oldStandby\x12(.frequenz.api.microgrid.ComponentIdParam\x1a\x16.google.protobuf.Empty\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/v1/components/{id}/coldStandby\x12j\n\x04Stop\x12(.frequenz.api.microgrid.ComponentIdParam\x1a\x16.google.protobuf.Empty\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v1/components/{id}/stop\x12r\n\x08\x45rrorAck\x12(.frequenz.api.microgrid.ComponentIdParam\x1a\x16.google.protobuf.Empty\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/components/{id}/errorAckb\x06proto3')

_COMPONENTCATEGORY = DESCRIPTOR.enum_types_by_name['ComponentCategory']
ComponentCategory = enum_type_wrapper.EnumTypeWrapper(_COMPONENTCATEGORY)
COMPONENT_CATEGORY_UNSPECIFIED = 0
COMPONENT_CATEGORY_GRID = 1
COMPONENT_CATEGORY_METER = 2
COMPONENT_CATEGORY_INVERTER = 3
COMPONENT_CATEGORY_CONVERTER = 4
COMPONENT_CATEGORY_BATTERY = 5
COMPONENT_CATEGORY_EV_CHARGER = 6
COMPONENT_CATEGORY_SENSOR = 7
COMPONENT_CATEGORY_CRYPTO_MINER = 8
COMPONENT_CATEGORY_ELECTROLYZER = 9
COMPONENT_CATEGORY_CHP = 10
COMPONENT_CATEGORY_LOAD = 14
COMPONENT_CATEGORY_JUNCTION = 15


_COMPONENTFILTER = DESCRIPTOR.message_types_by_name['ComponentFilter']
_COMPONENTIDPARAM = DESCRIPTOR.message_types_by_name['ComponentIdParam']
_CONNECTIONFILTER = DESCRIPTOR.message_types_by_name['ConnectionFilter']
_POWERLEVELPARAM = DESCRIPTOR.message_types_by_name['PowerLevelParam']
_SETBOUNDSPARAM = DESCRIPTOR.message_types_by_name['SetBoundsParam']
_COMPONENT = DESCRIPTOR.message_types_by_name['Component']
_COMPONENTLIST = DESCRIPTOR.message_types_by_name['ComponentList']
_COMPONENTDATA = DESCRIPTOR.message_types_by_name['ComponentData']
_CONNECTION = DESCRIPTOR.message_types_by_name['Connection']
_CONNECTIONLIST = DESCRIPTOR.message_types_by_name['ConnectionList']
_SETBOUNDSPARAM_TARGETMETRIC = _SETBOUNDSPARAM.enum_types_by_name['TargetMetric']
ComponentFilter = _reflection.GeneratedProtocolMessageType('ComponentFilter', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENTFILTER,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.ComponentFilter)
  })
_sym_db.RegisterMessage(ComponentFilter)

ComponentIdParam = _reflection.GeneratedProtocolMessageType('ComponentIdParam', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENTIDPARAM,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.ComponentIdParam)
  })
_sym_db.RegisterMessage(ComponentIdParam)

ConnectionFilter = _reflection.GeneratedProtocolMessageType('ConnectionFilter', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONFILTER,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.ConnectionFilter)
  })
_sym_db.RegisterMessage(ConnectionFilter)

PowerLevelParam = _reflection.GeneratedProtocolMessageType('PowerLevelParam', (_message.Message,), {
  'DESCRIPTOR' : _POWERLEVELPARAM,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.PowerLevelParam)
  })
_sym_db.RegisterMessage(PowerLevelParam)

SetBoundsParam = _reflection.GeneratedProtocolMessageType('SetBoundsParam', (_message.Message,), {
  'DESCRIPTOR' : _SETBOUNDSPARAM,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.SetBoundsParam)
  })
_sym_db.RegisterMessage(SetBoundsParam)

Component = _reflection.GeneratedProtocolMessageType('Component', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENT,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.Component)
  })
_sym_db.RegisterMessage(Component)

ComponentList = _reflection.GeneratedProtocolMessageType('ComponentList', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENTLIST,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.ComponentList)
  })
_sym_db.RegisterMessage(ComponentList)

ComponentData = _reflection.GeneratedProtocolMessageType('ComponentData', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENTDATA,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.ComponentData)
  })
_sym_db.RegisterMessage(ComponentData)

Connection = _reflection.GeneratedProtocolMessageType('Connection', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTION,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.Connection)
  })
_sym_db.RegisterMessage(Connection)

ConnectionList = _reflection.GeneratedProtocolMessageType('ConnectionList', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONLIST,
  '__module__' : 'frequenz.api.microgrid.microgrid_pb2'
  # @@protoc_insertion_point(class_scope:frequenz.api.microgrid.ConnectionList)
  })
_sym_db.RegisterMessage(ConnectionList)

_MICROGRID = DESCRIPTOR.services_by_name['Microgrid']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MICROGRID.methods_by_name['ListComponents']._options = None
  _MICROGRID.methods_by_name['ListComponents']._serialized_options = b'\202\323\344\223\002\020\022\016/v1/components'
  _MICROGRID.methods_by_name['ListConnections']._options = None
  _MICROGRID.methods_by_name['ListConnections']._serialized_options = b'\202\323\344\223\002\021\022\017/v1/connections'
  _MICROGRID.methods_by_name['GetComponentData']._options = None
  _MICROGRID.methods_by_name['GetComponentData']._serialized_options = b'\202\323\344\223\002\032\022\030/v1/components/{id}/data'
  _MICROGRID.methods_by_name['CanStreamData']._options = None
  _MICROGRID.methods_by_name['CanStreamData']._serialized_options = b'\202\323\344\223\002\037\022\035/v1/components/{id}/canStream'
  _MICROGRID.methods_by_name['Charge']._options = None
  _MICROGRID.methods_by_name['Charge']._serialized_options = b'\202\323\344\223\0020\022./v1/components/{component_id}/charge/{power_w}'
  _MICROGRID.methods_by_name['Discharge']._options = None
  _MICROGRID.methods_by_name['Discharge']._serialized_options = b'\202\323\344\223\0023\0221/v1/components/{component_id}/discharge/{power_w}'
  _MICROGRID.methods_by_name['Start']._options = None
  _MICROGRID.methods_by_name['Start']._serialized_options = b'\202\323\344\223\002\033\022\031/v1/components/{id}/start'
  _MICROGRID.methods_by_name['HotStandby']._options = None
  _MICROGRID.methods_by_name['HotStandby']._serialized_options = b'\202\323\344\223\002 \022\036/v1/components/{id}/hotStandby'
  _MICROGRID.methods_by_name['ColdStandby']._options = None
  _MICROGRID.methods_by_name['ColdStandby']._serialized_options = b'\202\323\344\223\002!\022\037/v1/components/{id}/coldStandby'
  _MICROGRID.methods_by_name['Stop']._options = None
  _MICROGRID.methods_by_name['Stop']._serialized_options = b'\202\323\344\223\002\032\022\030/v1/components/{id}/stop'
  _MICROGRID.methods_by_name['ErrorAck']._options = None
  _MICROGRID.methods_by_name['ErrorAck']._serialized_options = b'\202\323\344\223\002\036\022\034/v1/components/{id}/errorAck'
  _COMPONENTCATEGORY._serialized_start=1912
  _COMPONENTCATEGORY._serialized_end=2355
  _COMPONENTFILTER._serialized_start=418
  _COMPONENTFILTER._serialized_end=511
  _COMPONENTIDPARAM._serialized_start=513
  _COMPONENTIDPARAM._serialized_end=543
  _CONNECTIONFILTER._serialized_start=545
  _CONNECTIONFILTER._serialized_end=593
  _POWERLEVELPARAM._serialized_start=595
  _POWERLEVELPARAM._serialized_end=651
  _SETBOUNDSPARAM._serialized_start=654
  _SETBOUNDSPARAM._serialized_end=902
  _SETBOUNDSPARAM_TARGETMETRIC._serialized_start=825
  _SETBOUNDSPARAM_TARGETMETRIC._serialized_end=902
  _COMPONENT._serialized_start=905
  _COMPONENT._serialized_end=1340
  _COMPONENTLIST._serialized_start=1342
  _COMPONENTLIST._serialized_end=1412
  _COMPONENTDATA._serialized_start=1415
  _COMPONENTDATA._serialized_end=1792
  _CONNECTION._serialized_start=1794
  _CONNECTION._serialized_end=1834
  _CONNECTIONLIST._serialized_start=1836
  _CONNECTIONLIST._serialized_end=1909
  _MICROGRID._serialized_start=2358
  _MICROGRID._serialized_end=3806
# @@protoc_insertion_point(module_scope)
