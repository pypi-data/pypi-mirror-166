{"version":3,"sources":["TokenisationVisComponent.tsx","index.tsx"],"names":["TokenisationVisComponent","render","data","props","args","keys","theme","Object","Container","fluid","map","key","Row","style","marginBottom","Card","text","Body","Title","Subtitle","length","token","Button","variant","className","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"ySAkBMA,E,4MAGGC,OAAS,WAId,IAAMC,EAAO,EAAKC,MAAMC,KAAX,KAGPC,GAFY,EAAKF,MAAfG,MAEKC,OAAOF,KAAKH,IACzB,OACE,6BACE,kBAACM,EAAA,EAAD,CAAWC,OAAK,GACbJ,EAAKK,KAAI,SAACC,GAAD,OACR,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,aAAc,QAGhB,kBAACC,EAAA,EAAD,CAAMC,KAAK,QACT,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAaP,EAAb,MACA,kBAACI,EAAA,EAAKI,SAAN,CAAeN,MAAO,CAACC,aAAc,QAArC,qBAAgEZ,EAAKS,GAAKS,QACzElB,EAAKS,GAAKD,KACT,SACEW,GADF,OASE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,UAAU,QAC9BH,e,yBAnCcI,KAsDxBC,cAAwB1B,GCpEvC2B,IAAS1B,OACP,kBAAC,IAAM2B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.db8d4976.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Card from \"react-bootstrap/Card\"\n\ninterface State {\n  keys: string[]\n}\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass TokenisationVisComponent extends StreamlitComponentBase<State> {\n  //public state = { keys: [] }\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n\n    const data = this.props.args[\"data\"]\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n    const keys = Object.keys(data)\n    return (\n      <div>\n        <Container fluid>\n          {keys.map((key) => (\n            <Row \n              style={{\n                marginBottom: \"5px\",\n              }}\n            >\n              <Card text=\"dark\">\n                <Card.Body>\n                  <Card.Title>{key} :</Card.Title>\n                  <Card.Subtitle style={{marginBottom: \"5px\"}}>Number of tokens: {data[key].length}</Card.Subtitle>\n                  {data[key].map(\n                    (\n                      token:\n                        | boolean\n                        | React.ReactChild\n                        | React.ReactFragment\n                        | React.ReactPortal\n                        | null\n                        | undefined\n                    ) => (\n                      <Button variant=\"info\" className=\"mr-1\">\n                        {token}\n                      </Button>\n                    )\n                  )}\n                </Card.Body>\n              </Card>\n            </Row>\n          ))}\n        </Container>\n      </div>\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(TokenisationVisComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TokenisationVisComponent from \"./TokenisationVisComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <TokenisationVisComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}