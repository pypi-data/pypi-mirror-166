Metadata-Version: 2.1
Name: zash-sdk
Version: 0.0.4
Summary: SDK
Home-page: https://github.com/zashdev/zash-sdk
Author: efx
Author-email: efe@joinzash.com
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: boto3
Requires-Dist: pandas
Requires-Dist: redshift-connector
Requires-Dist: dateparser
Requires-Dist: requests
Requires-Dist: fastcore
Provides-Extra: dev

zash-sdk
================

<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

Delightful, ergonomic blockchain data SDK built for data scientist, ML
engineers and data analysts. Wrangle and explore transactions under a
minute.

## Install

``` sh
pip install zash-sdk
```

## Quickstart

### Authentication

Get your credentials from [zash.sh](https://zash.sh)

``` python
from zash_sdk.zash import Zash
zash = Zash('your_username', 'your_api_key')
```

    Authenticated!

### Accessing NFT collection trades

Grab all Bored Ape trades in x2y2 since yesterday (contract address
[here](https://etherscan.io/address/0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d)):

``` python
bayc = zash.nft('eth').collection('0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D')
```

``` python
trades_df = bayc.trades('yesterday')
trades_df.query("marketplace_name == 'x2y2'").head()
```

<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>id</th>
      <th>hash</th>
      <th>buyer</th>
      <th>seller</th>
      <th>collection_address</th>
      <th>token_id</th>
      <th>marketplace_address</th>
      <th>marketplace_name</th>
      <th>price</th>
      <th>currency</th>
      <th>block_hash</th>
      <th>block_number</th>
      <th>mint</th>
      <th>bundle</th>
      <th>timestamp</th>
      <th>updated_at</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>7</th>
      <td>c8c81cee-a23b-340f-bb4d-81298c1fbef3</td>
      <td>0x04d1b88921fa61e760cb55fe30e36efc346c9c313399...</td>
      <td>0x7bF481e3a1Dd55618AC58F874481A9eAa3231734</td>
      <td>0xed2ab4948bA6A909a7751DEc4F34f303eB8c7236</td>
      <td>0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D</td>
      <td>7404</td>
      <td>0x74312363e45DCaBA76c59ec49a7Aa8A65a67EeD3</td>
      <td>x2y2</td>
      <td>72.00</td>
      <td>WETH</td>
      <td>0xf767a152a503621334ec7f07d0d784cf5d3f7ed2da23...</td>
      <td>15479591</td>
      <td>False</td>
      <td>False</td>
      <td>1662405470</td>
      <td>2022-09-05 19:31:20</td>
    </tr>
    <tr>
      <th>24</th>
      <td>a92becf0-de72-3b15-b34f-76ef1261d3e8</td>
      <td>0xf0b4bb46af36b3ee16110b1b50bf42ac481f82dc8109...</td>
      <td>0xed2ab4948bA6A909a7751DEc4F34f303eB8c7236</td>
      <td>0xaf0f4479aF9Df756b9b2c69B463214B9a3346443</td>
      <td>0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D</td>
      <td>9425</td>
      <td>0x74312363e45DCaBA76c59ec49a7Aa8A65a67EeD3</td>
      <td>x2y2</td>
      <td>69.95</td>
      <td>ETH</td>
      <td>0x9ec1d48c818c5f8ad282cf33a4fc7a6b9fe7eaea5bb5...</td>
      <td>15479585</td>
      <td>False</td>
      <td>False</td>
      <td>1662405361</td>
      <td>2022-09-05 19:31:20</td>
    </tr>
    <tr>
      <th>39</th>
      <td>b14adc70-cdf8-399c-bc17-2a08e47a17a3</td>
      <td>0xc5fa6f1939d8b62024ab680b8ed747b719fca7be63d1...</td>
      <td>0x6cFdad0772EDC2EA15076A9706ec7c1F0a791aC1</td>
      <td>0xFACb9BB8f399c5548aFA36AB18B7E0e2b0F0C8c2</td>
      <td>0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D</td>
      <td>4591</td>
      <td>0x74312363e45DCaBA76c59ec49a7Aa8A65a67EeD3</td>
      <td>x2y2</td>
      <td>70.00</td>
      <td>ETH</td>
      <td>0x22c7e0f6a69dbffd147395ab59bb491bed0d6ec30004...</td>
      <td>15480433</td>
      <td>False</td>
      <td>False</td>
      <td>1662417133</td>
      <td>2022-09-05 22:46:19</td>
    </tr>
    <tr>
      <th>62</th>
      <td>9e4991c3-bc6f-328b-b47f-d7126d0df2af</td>
      <td>0xc69a2089aecde6acc04ed4bdda5db2889abcb5b22ae3...</td>
      <td>0xF6a242191ca16FB561403182a2c7A023F2261eB7</td>
      <td>0xFF389e55ee4dD64D82B2b6FefEF3F7aA63B218fD</td>
      <td>0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D</td>
      <td>5037</td>
      <td>0x74312363e45DCaBA76c59ec49a7Aa8A65a67EeD3</td>
      <td>x2y2</td>
      <td>71.00</td>
      <td>ETH</td>
      <td>0xa1c6b48d455cadfba86c685de592bd8f68c3f64f5361...</td>
      <td>15481645</td>
      <td>False</td>
      <td>False</td>
      <td>1662434301</td>
      <td>2022-09-06 03:31:29</td>
    </tr>
    <tr>
      <th>65</th>
      <td>6b6e1693-a5ec-36ae-9d67-117216e8aa18</td>
      <td>0xb6a42a0d54659210f5ba78cf8981377a9adf9b6e7ff1...</td>
      <td>0xad6452a9b8F10b0fE084C83c396ABAe96411C761</td>
      <td>0x6De3E88c9119Af0CfE2880f9758d76Aa95A9ec36</td>
      <td>0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D</td>
      <td>4258</td>
      <td>0x74312363e45DCaBA76c59ec49a7Aa8A65a67EeD3</td>
      <td>x2y2</td>
      <td>85.00</td>
      <td>WETH</td>
      <td>0x1cb0864eacc179b4875dcffe9f7525c566a723a2f5bd...</td>
      <td>15482016</td>
      <td>False</td>
      <td>False</td>
      <td>1662439305</td>
      <td>2022-09-06 04:46:22</td>
    </tr>
  </tbody>
</table>
</div>

A closer look at a trade:

``` python
trade = trades_df.query("marketplace_name == 'x2y2'").head(1).squeeze()
trade
```

    id                                  c8c81cee-a23b-340f-bb4d-81298c1fbef3
    hash                   0x04d1b88921fa61e760cb55fe30e36efc346c9c313399...
    buyer                         0x7bF481e3a1Dd55618AC58F874481A9eAa3231734
    seller                        0xed2ab4948bA6A909a7751DEc4F34f303eB8c7236
    collection_address            0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D
    token_id                                                            7404
    marketplace_address           0x74312363e45DCaBA76c59ec49a7Aa8A65a67EeD3
    marketplace_name                                                    x2y2
    price                                                               72.0
    currency                                                            WETH
    block_hash             0xf767a152a503621334ec7f07d0d784cf5d3f7ed2da23...
    block_number                                                    15479591
    mint                                                               False
    bundle                                                             False
    timestamp                                                     1662405470
    updated_at                                           2022-09-05 19:31:20
    Name: 7, dtype: object

``` python
# You can check out the transaction on etherscan:
!echo https://etherscan.io/tx/{trade['hash']}
```

    https://etherscan.io/tx/0x04d1b88921fa61e760cb55fe30e36efc346c9c313399b6c7775acb44b0ed320f

### Compare marketplaces:

``` python
all_trades_df = zash.nft('eth').trades('1 hour ago')
```

``` python
# offmarket marketplaces are labelled as -
all_trades_df\
    .query('marketplace_name != "-"')\
    .groupby('marketplace_name')\
    .agg({"price":'sum'})\
    .sort_values('price', ascending=False)\
    .plot(kind='bar', ylabel='price_in_eth', legend=False)
```

    <AxesSubplot:xlabel='marketplace_name', ylabel='price_in_eth'>

![](index_files/figure-gfm/cell-9-output-2.png)

### Network analysis on trades

We are building and enriching network analysis tools to be go deeper on
a given trade network. Below is a flavor of what is to come.

``` python
from zash_sdk.graph import *
network = build_network(bayc.trades('yesterday'))
plot_trade_network(network)
```

![](index_files/figure-gfm/cell-10-output-1.png)

You can filter for wash trades (triangular or bidirectional cycles for
instance).

### Stay tuned!

This is the beginning of what you can do with Zash SDK. We would be
adding transparent NFT price prediction and wallet based analysis tools
in the upcoming weeks. If you have any feature requests [get in
touch](mailto:efe@joinzash.com). We are also
[hiring](https://northern-steel-324.notion.site/Zash-is-Hiring-d5e19210b944486c8fd11f385a176999)!


