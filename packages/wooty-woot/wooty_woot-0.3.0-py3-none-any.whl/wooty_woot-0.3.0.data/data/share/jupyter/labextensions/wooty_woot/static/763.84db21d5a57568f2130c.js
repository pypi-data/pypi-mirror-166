"use strict";(self.webpackChunkwooty_woot=self.webpackChunkwooty_woot||[]).push([[763],{763:(o,e,t)=>{t.r(e),t.d(e,{default:()=>d});var n=t(814),a=t(29),r=t(656),s=t(174),c=t(484),i=t(149);async function w(o="",e={}){const t=i.ServerConnection.makeSettings(),n=c.URLExt.join(t.baseUrl,"wooty-woot",o);let a;try{a=await i.ServerConnection.makeRequest(n,e,t)}catch(o){throw new i.ServerConnection.NetworkError(o)}let r=await a.text();if(r.length>0)try{r=JSON.parse(r)}catch(o){console.log("Not a JSON response body.",a)}if(!a.ok)throw new i.ServerConnection.ResponseError(a,r.message||r);return r}const l={id:"wooty_woot:plugin",autoStart:!0,optional:[a.ISettingRegistry,n.ILauncher,r.IFileBrowserFactory],activate:(o,e,t,n)=>{console.log("JupyterLab extension wooty_woot is activated!"),e&&e.load(l.id).then((o=>{console.log("wooty_woot settings loaded:",o.composite)})).catch((o=>{console.error("Failed to load settings for wooty_woot.",o)})),o.commands.addCommand("wooty_woot:open",{execute:()=>{const o=w("viewer",{body:JSON.stringify({path:n.defaultBrowser.model.path}),method:"POST"});console.log("Aaaand I'm back",o)},icon:s.imageIcon,label:"Open Tutorial Widget"}),t&&t.add({command:"wooty_woot:open",category:"Moo"}),w("viewer").then((o=>{console.log(o)})).catch((o=>{console.error(`The wooty_woot server extension appears to be missing.\n${o}`)}))}},d=l}}]);