# This file was generated by mettle.genes.db.GenPy3 [ver 2.2] on Thu Sep  8 08:23:42 2022
#  Target Database = postgresql
#
import datetime
import uuid
import time
import mettle.lib
import mettle.io
import mettle.db

from bs_loco.db.tables.corr_type_allow import tCorrTypeAllow

class dCorrTypeAllowUpdate:
    __slots__ = ("_dbcon", "_dbstmnt", "irec")

    def __init__(self, dbcon: mettle.db.IConnect):
        """
        Constructor.

        :param dbcon: Mettle database connection object.
        """
        self._dbcon   = dbcon
        self._dbstmnt = None
        self.irec     = tCorrTypeAllow()

    def __enter__(self):
        """
        With statement enter.
        """
        return self

    def __exit__(self, type, value, traceback):
        """
        With statement exit.
        """
        self._destroy()

    def _destroy(self):
        if self._dbstmnt:
            self._dbstmnt.destroy()
            self._dbstmnt = None

    def exec_deft(self,
                  corrtype_id: str,
                  allow_id: str,
                  status: str,
                  regex: str,
                  modified_by: str) -> "dCorrTypeAllowUpdate":
        """
        Execute the query by setting all the inputs.

        :param corrtype_id: str
        :param allow_id: str
        :param status: str
        :param regex: str
        :param modified_by: str
        :param tm_stamp: datetime.datetime
        :return: Self for convenience.
        """
        self.irec.corrtype_id = corrtype_id
        self.irec.allow_id = allow_id
        self.irec.status = status
        self.irec.regex = regex
        self.irec.modified_by = modified_by

        return self.exec()

    def exec(self, irec: tCorrTypeAllow = None) -> "dCorrTypeAllowUpdate":
        """
        Execute the query, optionally passing in the input rec.

        :param irec:
        :return: Self for convenience.
        """
        if irec:
            self.irec._copy_from(irec)

        self._destroy()

        self._dbstmnt = self._dbcon.statement("CorrTypeAllowUpdate", self._dbcon.STMNT_TYPE_CUD)

        self._dbstmnt.sql("""update
  loco.CorrTypeAllow
set
  status = :status,
  regex = :regex,
  modified_by = :modified_by,
  tm_stamp = :tm_stamp
where
  corrtype_id = :corrtype_id and
  allow_id = :allow_id""")

        self.irec.tm_stamp = self._dbcon.get_timestamp()

        self._dbstmnt.bind_in("corrtype_id", self.irec.corrtype_id, str, 16)
        self._dbstmnt.bind_in("allow_id", self.irec.allow_id, str, 32)
        self._dbstmnt.bind_in("status", self.irec.status, str, 1)
        self._dbstmnt.bind_in("regex", self.irec.regex, str, 256)
        self._dbstmnt.bind_in("modified_by", self.irec.modified_by, str, 128)
        self._dbstmnt.bind_in("tm_stamp", self.irec.tm_stamp, datetime.datetime)

        self._dbcon.execute(self._dbstmnt)

        if irec:
            irec._copy_from(self.irec)

        return self

