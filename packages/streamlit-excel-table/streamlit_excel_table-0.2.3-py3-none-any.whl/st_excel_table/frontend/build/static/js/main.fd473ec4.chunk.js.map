{"version":3,"sources":["ReactAwesomeTable.tsx","index.tsx"],"names":["ReactAwesomeTable","args","useRenderData","React","useState","data","setData","handleChange","useCallback","items","getRowKey","item","rowIndex","String","columns","onChange","options","rowsPerPage","rowsPerPageOptions","readOnly","sticky","rowNumber","disableUndo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAmCeA,EA7BqB,WAAO,IAAD,cAEhCC,EADyBC,0BACUD,KAEzC,EAAwBE,IAAMC,SAAyBH,EAAKI,MAA5D,mBAAOA,EAAP,KAAaC,EAAb,KACMC,EAAeJ,IAAMK,aAAY,SAACC,GACpCH,EAAQG,EACX,GAAE,IACGC,EAAYP,IAAMK,aAAY,SAACG,EAAuBC,GACxD,MAAM,GAAN,OAAUC,OAAOF,GAAjB,YAA0BC,EAC7B,GAAE,IAEH,OACI,cAAC,IAAD,CACIP,KAAMA,EACNS,QAASb,EAAKa,QACdJ,UAAWA,EACXK,SAAUR,EACVS,QAAO,UAAEf,EAAKe,eAAP,QAAkB,CAAE,UAAY,EAAO,YAAc,GAC5DC,YAAW,UAAEhB,EAAKgB,mBAAP,QAAsB,GACjCC,mBAAkB,UAAEjB,EAAKiB,0BAAP,QAA6B,CAAC,GAAI,GAAI,KACxDC,SAAQ,UAAElB,EAAKkB,gBAAP,SACRC,OAAM,UAAEnB,EAAKmB,cAAP,SACNC,UAAS,UAAEpB,EAAKoB,iBAAP,SACTC,YAAW,UAAErB,EAAKqB,mBAAP,UAGtB,EC3BDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,oBAAD,UACI,cAAC,EAAD,QAGNC,SAASC,eAAe,Q","file":"static/js/main.fd473ec4.chunk.js","sourcesContent":["import React from \"react\"\nimport { RenderData } from \"streamlit-component-lib\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport { Table, TableProps } from '@tk42/react-awesome-table';\n\n\nconst ReactAwesomeTable: React.FC = () => {\n    const renderData: RenderData = useRenderData()\n    const args: TableProps<any> = renderData.args\n\n    const [data, setData] = React.useState<Partial<any>[]>(args.data);\n    const handleChange = React.useCallback((items: Partial<any>[]) => {\n        setData(items);\n    }, []);\n    const getRowKey = React.useCallback((item: any | undefined, rowIndex: number): string => {\n        return `${String(item)}_${rowIndex}`;\n    }, []);\n\n    return (\n        <Table\n            data={data}\n            columns={args.columns}\n            getRowKey={getRowKey}\n            onChange={handleChange}\n            options={args.options ?? { \"sortable\": false, \"filterable\": false }}\n            rowsPerPage={args.rowsPerPage ?? 10}\n            rowsPerPageOptions={args.rowsPerPageOptions ?? [10, 30, 100]}\n            readOnly={args.readOnly ?? false}\n            sticky={args.sticky ?? false}\n            rowNumber={args.rowNumber ?? false}\n            disableUndo={args.disableUndo ?? false}\n        />\n    )\n};\n\nexport default ReactAwesomeTable;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ReactAwesomeTable from \"./ReactAwesomeTable\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <StreamlitProvider>\n            <ReactAwesomeTable />\n        </StreamlitProvider>\n    </React.StrictMode>\n    , document.getElementById(\"root\"))\n"],"sourceRoot":""}